{"version":3,"file":"7.246b56003a6cf7d4e18e.hot-update.js","sources":["webpack:///components/UserData.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Icon, Container, Table, Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport getCurrentUser from \"../utils/UserUtils\";\nimport axios from \"axios\";\n\nexport default class UserData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: []\n    };\n    this.currentUser = getCurrentUser();\n  }\n\n  async componentDidMount() {\n    let currentUser = this.currentUser;\n    try {\n      const response = await axios.post(window.location.origin + \"/users\", {\n        currentUser\n      });\n      if (response.data.success) {\n        this.setState({ users: response.data.userData });\n        this.setState({ img1: response.data.pic1 });\n        this.setState({ img2: response.data.pic2 });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //TODO: Create UserProfile component with default template\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Header as=\"h1\" style={{ textAlign: \"center\", marginTop: \"30px\" }}>\n            Your Profile\n          </Header>\n          <Container style={{ marginTop: \"10px\" }}>\n            {this.state.users.map(member => (\n              <Header\n                as=\"h3\"\n                block\n                style={{ backgroundColor: \"#d9edf7\" }}\n                key={member.id}\n              >\n                <Icon name=\"user\" size=\"big\" style={{ align: \"left\" }} />\n                {member.lname}, {member.fname}\n              </Header>\n            ))}\n            <Table>\n              {this.state.users.map(member => (\n                <Table.Body key={member.id}>\n                  <Table.Row>\n                    <Table.Cell>Username: {member.username}</Table.Cell>\n                    <Table.Cell>ID: {member.id}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>street: {member.street}</Table.Cell>\n                    <Table.Cell>House Nr: {member.houseNr}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Postal Code: {member.postCode}</Table.Cell>\n                    <Table.Cell>Residence: {member.placeOfRes}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Birthday: {member.dateOfBirth}</Table.Cell>\n                    <Table.Cell>Nationality: {member.nat}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Email: {member.email}</Table.Cell>\n                    <Table.Cell>Mobile Number: {member.mobNr}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Role: {member.privileges}</Table.Cell>\n                    <Table.Cell>isRegistered: {member.isRegistered}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Hash: {member.hash}</Table.Cell>\n                    <Table.Cell />\n                  </Table.Row>\n                </Table.Body>\n              ))}\n            </Table>\n            <img\n              className=\"img-responsive\"\n              src={`../static/${this.state.img1}`}\n              style={{ width: \"200px\", height: \"113px\", float: \"left\" }}\n            />\n            <img\n              className=\"img-responsive\"\n              src={`../static/${this.state.img2}`}\n              style={{ width: \"200px\", height: \"113px\", float: \"right\" }}\n            />\n          </Container>\n        </Layout>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/UserData.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AALA;AAMA;AACA;;;;;;;;;;;;AAEA;;;AAEA;AACA;AADA;AACA;;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;AAGA;AACA;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAkCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA7FA;AACA;;;;;A","sourceRoot":""}