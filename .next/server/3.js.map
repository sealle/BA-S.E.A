{"version":3,"file":"3.js","sources":["webpack:///./components/UserData.js","webpack:///./routes.js","webpack:///./utils/CookieUtils.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Icon,\n  Container,\n  Header,\n  Segment,\n  Button,\n  Form,\n  Popup,\n  Accordion,\n  Modal\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport { Link, Router } from \"../routes\";\nimport { setCookie } from \"../utils/CookieUtils\";\n\nexport default class UserData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      beneficialOwners: [],\n      inAddressEdit: false,\n      inEmailEdit: false,\n      inMobileEdit: false,\n      inCompNameEdit: false,\n      inCompAddressEdit: false\n    };\n  }\n\n  //get user data from server\n  async componentWillMount() {\n    try {\n      const response = await axios.post(window.location.origin + \"/users\");\n      if (response.data.success) {\n        this.setState({\n          users: response.data.userData,\n          beneficialOwners: response.data.beneficialOwners\n        });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    this.setState({ isComp: this.state.users[0].isComp });\n  }\n\n  //edit address\n  editAddress = () => {\n    this.setState({\n      inAddressEdit: true,\n      inEmailEdit: false,\n      inMobileEdit: false,\n      inCompNameEdit: false,\n      inCompAddressEdit: false\n    });\n  };\n\n  //edit email address\n  editEmail = () => {\n    this.setState({\n      inAddressEdit: false,\n      inEmailEdit: true,\n      inMobileEdit: false,\n      inCompNameEdit: false,\n      inCompAddressEdit: false\n    });\n  };\n\n  //edit mobile number\n  editMobile = () => {\n    this.setState({\n      inAddressEdit: false,\n      inEmailEdit: false,\n      inMobileEdit: true,\n      inCompNameEdit: false,\n      inCompAddressEdit: false\n    });\n  };\n\n  //edit company name\n  editCompName = () => {\n    this.setState({\n      inAddressEdit: false,\n      inEmailEdit: false,\n      inMobileEdit: false,\n      inCompNameEdit: true,\n      inCompAddressEdit: false\n    });\n  };\n\n  //edit company address\n  editCompAddress = () => {\n    this.setState({\n      inAddressEdit: false,\n      inEmailEdit: false,\n      inMobileEdit: false,\n      inCompNameEdit: false,\n      inCompAddressEdit: true\n    });\n  };\n\n  //exit editing mode\n  exitEditMode = () => {\n    this.setState({\n      inAddressEdit: false,\n      inEmailEdit: false,\n      inMobileEdit: false,\n      inCompNameEdit: false,\n      inCompAddressEdit: false\n    });\n  };\n\n  //save address and send data to server\n  saveAddress = async () => {\n    let formData = new FormData();\n\n    formData.append(\"street\", this.state.street);\n    formData.append(\"houseNr\", this.state.houseNr);\n    formData.append(\"postCode\", this.state.postCode);\n    formData.append(\"placeOfRes\", this.state.placeOfRes);\n    formData.append(\"username\", this.state.users[0].username);\n\n    console.log(this.state.users[0].username, this.state.street);\n\n    let response = await axios.post(\n      window.location.origin + \"/editData\",\n      formData\n    );\n    if (response.data.success) {\n      this.exitEditMode();\n    }\n    window.location.href = \"/profile\";\n  };\n\n  //save email address and send data to server\n  saveEmail = async () => {\n    let email = this.state.email;\n    let userName = this.state.users[0].username;\n    let response = await axios.post(window.location.origin + \"/editData\", {\n      email,\n      userName\n    });\n    if (response.data.success) {\n      this.exitEditMode();\n    }\n    window.location.href = \"/profile\";\n  };\n\n  //save mobile number and send data to server\n  saveMobile = async () => {\n    let mobNr = this.state.mobNr;\n    let userName = this.state.users[0].username;\n    let response = await axios.post(window.location.origin + \"/editData\", {\n      mobNr,\n      userName\n    });\n    if (response.data.success) {\n      this.exitEditMode();\n    }\n    window.location.href = \"/profile\";\n  };\n\n  //save company name and send data to server\n  saveCompName = async () => {\n    let compName = this.state.compName;\n    let userName = this.state.users[0].username;\n    let response = await axios.post(window.location.origin + \"/editData\", {\n      compName,\n      userName\n    });\n    if (response.data.success) {\n      this.exitEditMode();\n    }\n    window.location.href = \"/profile\";\n  };\n\n  //save company address and send data to server\n  saveCompAddress = async () => {\n    let formData = new FormData();\n\n    formData.append(\"businessAd\", this.state.businessAd);\n    formData.append(\"compHouseNr\", this.state.compHouseNr);\n    formData.append(\"compPostCode\", this.state.compPostCode);\n    formData.append(\"residence\", this.state.residence);\n    formData.append(\"username\", this.state.users[0].username);\n\n    let response = await axios.post(\n      window.location.origin + \"/editData\",\n      formData\n    );\n    if (response.data.success) {\n      this.exitEditMode();\n    }\n    window.location.href = \"/profile\";\n  };\n\n  //handle accordion which shows beneficial owners\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  reRegister = async () => {\n    let response = await axios.post(window.location.origin + \"/reregister\", );\n    if(response.data.success) {\n      swal(\"Success\", \"You will be redirect to the registration page\", \"success\");\n      setCookie(\"x-access-token\", \"\", -60 * 60);\n      Router.push(\"/register\");\n    }\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    return (\n      <div>\n        <Segment style={{ width: \"98%\", marginLeft: \"16px\" }}>\n          <Header\n            as=\"h1\"\n            style={{\n              textAlign: \"center\",\n              marginTop: \"10px\",\n              color: \"#2985d0\"\n            }}\n          >\n            Your Profile\n          </Header>\n          <Container style={{ marginTop: \"10px\" }}>\n            <Container style={{ display: \"inline-block\" }}>\n              {this.state.inAddressEdit == true ||\n              this.state.inEmailEdit == true ||\n              this.state.inMobileEdit == true ||\n              this.state.inCompNameEdit == true ||\n              this.state.inCompAddressEdit == true ? (\n                <Button\n                  floated=\"left\"\n                  style={{ backgroundColor: \"white\", marginLeft: \"-20px\" }}\n                  onClick={this.exitEditMode}\n                >\n                  <Icon name=\"close\" />\n                </Button>\n              ) : null}\n              {/* Show edit company name and company address button if user is company */}\n              {this.state.isComp == \"1\" ? (\n                <div>\n                  <Popup\n                    trigger={\n                      <Button\n                        floated=\"right\"\n                        animated=\"vertical\"\n                        style={{ marginRight: \"3px\", backgroundColor: \"white\" }}\n                        onClick={this.editCompAddress}\n                        icon\n                      >\n                        <Icon name=\"location arrow\" />\n                      </Button>\n                    }\n                    content=\"Edit business address\"\n                    hideOnScroll\n                  />\n                  <Popup\n                    trigger={\n                      <Button\n                        floated=\"right\"\n                        animated=\"vertical\"\n                        style={{ marginRight: \"3px\", backgroundColor: \"white\" }}\n                        onClick={this.editCompName}\n                        icon\n                      >\n                        <Icon name=\"globe\" />\n                      </Button>\n                    }\n                    content=\"Edit company name\"\n                    hideOnScroll\n                  />\n                </div>\n              ) : null}\n              <Popup\n                trigger={\n                  <Button\n                    floated=\"right\"\n                    animated=\"vertical\"\n                    style={{ marginRight: \"3px\", backgroundColor: \"white\" }}\n                    onClick={this.editMobile}\n                    icon\n                  >\n                    <Icon name=\"phone\" />\n                  </Button>\n                }\n                content=\"Edit mobile number\"\n                hideOnScroll\n              />\n              <Popup\n                trigger={\n                  <Button\n                    floated=\"right\"\n                    animated=\"vertical\"\n                    style={{ marginRight: \"3px\", backgroundColor: \"white\" }}\n                    onClick={this.editEmail}\n                    icon\n                  >\n                    <Icon name=\"mail\" />\n                  </Button>\n                }\n                content=\"Edit email\"\n                hideOnScroll\n              />\n              <Popup\n                trigger={\n                  <Button\n                    floated=\"right\"\n                    animated=\"vertical\"\n                    style={{ marginRight: \"3px\", backgroundColor: \"white\" }}\n                    onClick={this.editAddress}\n                    icon\n                  >\n                    <Icon name=\"home\" />\n                  </Button>\n                }\n                content=\"Edit address\"\n                hideOnScroll\n              />\n            </Container>\n            {/* Display the user's data */}\n            {this.state.inAddressEdit == false &&\n            this.state.inCompAddressEdit == false &&\n            this.state.inCompNameEdit == false &&\n            this.state.inEmailEdit == false &&\n            this.state.inMobileEdit == false ? (\n              <Form>\n                {this.state.users.map(member => (\n                  <div>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        fluid\n                        label=\"Username\"\n                        value={member.username}\n                      />\n                      <Form.Input readOnly fluid label=\"ID\" value={member.id} />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"First Name\"\n                        value={member.fname}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Last Name\"\n                        value={member.lname}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        readOnly\n                        width=\"eleven\"\n                        fluid\n                        label=\"Street\"\n                        value={member.street}\n                      />\n                      <Form.Input\n                        readOnly\n                        width=\"five\"\n                        type=\"number\"\n                        fluid\n                        label=\"House Number\"\n                        value={member.houseNr}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        readOnly\n                        width=\"six\"\n                        fluid\n                        type=\"number\"\n                        label=\"Postal Code\"\n                        value={member.postCode}\n                      />\n                      <Form.Input\n                        readOnly\n                        width=\"ten\"\n                        fluid\n                        label=\"Place of Residence\"\n                        value={member.placeOfRes}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Date of Birth\"\n                        value={member.dateOfBirth}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Nationality\"\n                        value={member.nat}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Email\"\n                        value={member.email}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Mobile Number\"\n                        value={member.mobNr}\n                      />\n                    </Form.Group>\n                    <Form.Group width=\"sixteen\">\n                      <Form.Input\n                        width=\"sixteen\"\n                        readOnly\n                        fluid\n                        label=\"Registration Date\"\n                        value={member.regDate}\n                      />\n                    </Form.Group>\n\n                    <Form.Group width=\"sixteen\">\n                      <Form.Input\n                        width=\"sixteen\"\n                        readOnly\n                        fluid\n                        label=\"KycKey\"\n                        value={member.kycKey}\n                      />\n                    </Form.Group>\n                    {/* show beneficial owners data on click */}\n                    {this.state.beneficialOwners.length > 0 ? (\n                      <Accordion>\n                        <Accordion.Title\n                          active={activeIndex === 0}\n                          index={0}\n                          onClick={this.handleAccordionClick}\n                          style={{ fontWeight: \"bold\" }}\n                        >\n                          <Icon name=\"dropdown\" />\n                          Beneficial Owners of the Assets\n                        </Accordion.Title>\n                        <Accordion.Content active={activeIndex === 0}>\n                          {this.state.beneficialOwners.map(beneficialOwner => (\n                            <Segment>\n                              <Form.Group widths=\"equal\">\n                                <Form.Input\n                                  readOnly\n                                  fluid\n                                  label=\"First Name\"\n                                  value={beneficialOwner.ownerName}\n                                />\n                                <Form.Input\n                                  readOnly\n                                  fluid\n                                  label=\"Last Name\"\n                                  value={beneficialOwner.ownerLastName}\n                                />\n                              </Form.Group>\n                              <Form.Group>\n                                <Form.Input\n                                  readOnly\n                                  width=\"eleven\"\n                                  fluid\n                                  label=\"Street\"\n                                  value={beneficialOwner.ownerStreet}\n                                />\n                                <Form.Input\n                                  readOnly\n                                  width=\"five\"\n                                  fluid\n                                  label=\"House Number\"\n                                  value={beneficialOwner.ownerHouseNr}\n                                />\n                              </Form.Group>\n                              <Form.Group>\n                                <Form.Input\n                                  readOnly\n                                  width=\"six\"\n                                  fluid\n                                  label=\"Postal Code\"\n                                  value={beneficialOwner.ownerPostCode}\n                                />\n                                <Form.Input\n                                  readOnly\n                                  width=\"ten\"\n                                  fluid\n                                  label=\"Place of Residenz\"\n                                  value={beneficialOwner.ownerPlaceOfRes}\n                                />\n                              </Form.Group>\n                              <Form.Group widths=\"equal\">\n                                <Form.Input\n                                  readOnly\n                                  fluid\n                                  label=\"Date of Birth\"\n                                  value={beneficialOwner.ownerDateOfBirth}\n                                />\n                              </Form.Group>\n                            </Segment>\n                          ))}\n                        </Accordion.Content>\n                      </Accordion>\n                    ) : null}\n                    <br />\n\n                    <p\n                      style={{\n                        fontWeight: \"bold\",\n                        display: \"inline-block\",\n                        paddingRight: \"5px\"\n                      }}\n                    >\n                      Identity Card\n                    </p>\n\n                    <Popup\n                      trigger={<Icon name=\"question circle outline\" />}\n                      content={\n                        <div>\n                          <p>\n                            Note: If you receive a new identity card, you will\n                            need to re-register and redo the identification\n                            process!\n                          </p>\n                        </div>\n                      }\n                      hideOnScroll\n                    />\n\n                    <Form.Group widths=\"equal\" style={{ margin: \"0px auto\" }}>\n                      <a\n                        href={`../static/${this.state.users[0].ID1}`}\n                        target=\"_blank\"\n                        style={{ width: \"50%\" }}\n                      >\n                        <img\n                          className=\"img-responsive\"\n                          src={`../static/${this.state.users[0].ID1}`}\n                          style={{\n                            width: \"200px\",\n                            height: \"113px\"\n                          }}\n                        />\n                      </a>\n                      <a\n                        href={`../static/${this.state.users[0].ID2}`}\n                        target=\"_blank\"\n                      >\n                        <img\n                          className=\"img-responsive\"\n                          src={`../static/${this.state.users[0].ID2}`}\n                          style={{\n                            width: \"200px\",\n                            height: \"113px\"\n                          }}\n                        />\n                      </a>\n                    </Form.Group>\n                    {this.state.users[0].isComp == \"1\" ? (\n                      <div>\n                        <Form.Group style={{ marginTop: \"10px\" }}>\n                          <Form.Input\n                            readOnly\n                            width=\"sixteen\"\n                            fluid\n                            label=\"Company Name\"\n                            value={member.compName}\n                          />\n                        </Form.Group>\n                        <Form.Group>\n                          <Form.Input\n                            readOnly\n                            width=\"eleven\"\n                            fluid\n                            label=\"Business Address\"\n                            value={member.businessAd}\n                          />\n                          <Form.Input\n                            readOnly\n                            width=\"five\"\n                            fluid\n                            label=\"House Number\"\n                            value={member.compHouseNr}\n                          />\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                          <Form.Input\n                            readOnly\n                            width=\"six\"\n                            fluid\n                            label=\"Postal Code\"\n                            value={member.compPostCode}\n                          />\n                          <Form.Input\n                            readOnly\n                            width=\"ten\"\n                            fluid\n                            label=\"Place of Residenz\"\n                            value={member.residence}\n                          />\n                        </Form.Group>\n                        <Form.Group\n                          width=\"sixteen\"\n                          style={{ margin: \"0px auto\" }}\n                        >\n                          <Icon name=\"linkify\" />\n                          <a\n                            href={`../static/${this.state.users[0].doc1}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View extract of the relevant registration authority\n                          </a>\n                        </Form.Group>\n                        <Form.Group\n                          width=\"sixteen\"\n                          style={{ margin: \"0px auto\" }}\n                        >\n                          <Icon name=\"linkify\" />\n                          <a\n                            href={`../static/${this.state.users[0].doc2}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View electronic copy of the power of attorney\n                          </a>\n                        </Form.Group>\n                      </div>\n                    ) : null}\n                  </div>\n                ))}\n              </Form>\n            ) : // show when user edits address\n            this.state.inAddressEdit == true ? (\n              <Form onSubmit={this.saveAddress}>\n                <Form.Group>\n                  <Form.Input\n                    width=\"eleven\"\n                    fluid\n                    label=\"Street\"\n                    required\n                    placeholder=\"Street\"\n                    name=\"street\"\n                    value={this.state.street}\n                    onChange={event =>\n                      this.setState({ street: event.target.value })\n                    }\n                  />\n                  <Form.Input\n                    width=\"five\"\n                    fluid\n                    label=\"House Number\"\n                    required\n                    placeholder=\"House Number\"\n                    name=\"houseNr\"\n                    value={this.state.houseNr}\n                    onChange={event =>\n                      this.setState({ houseNr: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Input\n                    width=\"six\"\n                    fluid\n                    type=\"number\"\n                    name=\"postCode\"\n                    required\n                    placeholder=\"Postal Code\"\n                    label=\"Postal Code\"\n                    value={this.state.postCode}\n                    onChange={event =>\n                      this.setState({ postCode: event.target.value })\n                    }\n                  />\n                  <Form.Input\n                    width=\"ten\"\n                    fluid\n                    required\n                    placeholder=\"Place of Residence\"\n                    name=\"placeOfRes\"\n                    label=\"Place of Residence\"\n                    value={this.state.placeOfRes}\n                    onChange={event =>\n                      this.setState({ placeOfRes: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Container\n                  style={{ display: \"inline-block\", textAlign: \"center\" }}\n                >\n                  <Button>Save</Button>\n                </Container>\n              </Form>\n            ) : // show when user edits email address\n            this.state.inEmailEdit ? (\n              <Form onSubmit={this.saveEmail}>\n                <Form.Group>\n                  <Form.Input\n                    width=\"sixteen\"\n                    fluid\n                    name=\"email\"\n                    required\n                    placeholder=\"Email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Container\n                  style={{ display: \"inline-block\", textAlign: \"center\" }}\n                >\n                  <Button>Save</Button>\n                </Container>\n              </Form>\n            ) : // show when user edits mobile number\n            this.state.inMobileEdit ? (\n              <Form onSubmit={this.saveMobile}>\n                <Form.Group>\n                  <Form.Input\n                    width=\"sixteen\"\n                    name=\"mobNr\"\n                    placeholder=\"+4* *** ** **\"\n                    fluid\n                    required\n                    label=\"Mobile Number\"\n                    type=\"number\"\n                    value={this.state.mobNr}\n                    onChange={event =>\n                      this.setState({ mobNr: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Container\n                  style={{ display: \"inline-block\", textAlign: \"center\" }}\n                >\n                  <Button>Save</Button>\n                </Container>\n              </Form>\n            ) : // show when user edits company name\n            this.state.users[0].isComp == \"1\" && this.state.inCompNameEdit ? (\n              <Form onSubmit={this.saveCompName}>\n                <Form.Group style={{ marginTop: \"10px\" }}>\n                  <Form.Input\n                    width=\"sixteen\"\n                    fluid\n                    required\n                    label=\"Company Name\"\n                    name=\"compName\"\n                    placeholder=\"Company Name\"\n                    value={this.state.compName}\n                    onChange={event =>\n                      this.setState({ compName: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Container\n                  style={{ display: \"inline-block\", textAlign: \"center\" }}\n                >\n                  <Button>Save</Button>\n                </Container>\n              </Form>\n            ) : // show when user edits company address\n            this.state.users[0].isComp == \"1\" &&\n            this.state.inCompAddressEdit ? (\n              <Form onSubmit={this.saveCompAddress}>\n                <Form.Group>\n                  <Form.Input\n                    width=\"eleven\"\n                    fluid\n                    required\n                    name=\"businessAd\"\n                    placeholder=\"Street\"\n                    label=\"Business Address\"\n                    value={this.state.businessAd}\n                    onChange={event =>\n                      this.setState({ businessAd: event.target.value })\n                    }\n                  />\n                  <Form.Input\n                    width=\"five\"\n                    fluid\n                    required\n                    label=\"House Number\"\n                    placeholder=\"House Nr\"\n                    name=\"compHouseNr\"\n                    value={this.state.compHouseNr}\n                    onChange={event =>\n                      this.setState({ compHouseNr: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    width=\"six\"\n                    name=\"compPostCode\"\n                    fluid\n                    required\n                    label=\"Postal Code\"\n                    type=\"number\"\n                    placeholder=\"Postal Code\"\n                    value={this.state.compPostCode}\n                    onChange={event =>\n                      this.setState({\n                        compPostCode: event.target.value\n                      })\n                    }\n                  />\n                  <Form.Input\n                    width=\"ten\"\n                    name=\"residence\"\n                    fluid\n                    required\n                    label=\"Place of Residence\"\n                    placeholder=\"Place of Residence\"\n                    value={this.state.residence}\n                    onChange={event =>\n                      this.setState({ residence: event.target.value })\n                    }\n                  />\n                </Form.Group>\n                <Container\n                  style={{ display: \"inline-block\", textAlign: \"center\" }}\n                >\n                  <Button>Save</Button>\n                </Container>\n              </Form>\n            ) : null}\n            <br />\n            <Container \n              style={{ display: \"inline-block\", textAlign: \"center\" }}\n              >\n              <Button primary onClick={this.reRegister}>\n                Request a re-registration\n              </Button>\n            </Container>\n          </Container>\n        </Segment>\n      </div>\n    );\n  }\n}\n","const routes = require(\"next-routes\")();\n\nmodule.exports = routes;\n//add dynamic route \nroutes.add(\"passwordchange\", \"/passwordchange/:id\", \"passwordchange\");\n","//set cookie function\n//https://www.w3schools.com/js/js_cookies.asp\nexport function setCookie(cname, cvalue, exdays) {\n  let d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname + \"=\" + cvalue + \";\" + expires + \"HttpOnly;\" + \";path=/\";\n}\n\n//get cookie function\n//https://www.w3schools.com/js/js_cookies.asp\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n"],"mappings":"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ACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAAA;AAGA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAjDA;AAgEA;AACA;AACA;AACA;AAHA;AADA;AAWA;AAAA;AAAA;AACA;AASA;AAXA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAUA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AASA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAvSA;AAqTA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAcA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AATA;AAeA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AATA;AAeA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAcA;AAAA;AAAA;AAAA;AADA;AAOA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAcA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAQA;;;;AAn0BA;AACA;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}