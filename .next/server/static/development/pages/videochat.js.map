{"version":3,"file":"static/development/pages/videochat.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout.js","webpack:///./components/ProfileHeader.js","webpack:///./components/UserList.js","webpack:///./components/VideoChat.js","webpack:///./pages/videochat.js","webpack:///./routes.js","webpack:///./utils/CookieUtils.js","webpack:///./webrtc/MediaHandler.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"mrz\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"otplib/authenticator\"","webpack:///external \"pusher-js\"","webpack:///external \"react\"","webpack:///external \"react-otp-input\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"simple-peer\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"sweetalert2\"","webpack:///external \"tesseract.ts\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nexport default props => {\n  return (\n    <Container style={{ width: 650, border: 1 }}>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\n        />\n      </Head>\n      <style jsx global>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n\n      {props.children}\n    </Container>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Menu, Icon, Container, Header, Segment } from \"semantic-ui-react\";\nimport { setCookie } from \"../utils/CookieUtils\";\nimport { Router, Link } from \"../routes\";\nimport axios from \"axios\";\nimport Layout from \"./Layout\";\nimport UserList from \"./UserList\";\nimport VideoChat from \"./VideoChat\";\n\nexport default class ProfileHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: false,\n      currentUser: \"\",\n      // activeItem: \"videochat\"\n    };\n    this.logout = e => this._logout();\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/currentuser\"\n      );\n      if (response.data.success) {\n        this.setState({ currentUser: response.data.currentUser });\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  _logout() {\n    setCookie(\"x-access-token\", \"\", -60 * 60);\n    Router.pushRoute(\"/login\");\n    window.location.href = \"/login\";\n  }\n\n  // handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    // const { activeItem } = this.state;\n    return (\n      <div>\n        <Menu pointing>\n          <Menu.Item name=\"home\">\n            <Icon name=\"home\" size=\"small\" />\n          </Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Menu.Item name=\"logout\" onClick={this.logout} />\n            <Menu.Item>\n              <Icon name=\"user\" size=\"small\" />\n              <p>{this.state.currentUser}</p>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Layout>\n          <style jsx global>{`\n            body {\n              background: #e6e6e6;\n            }\n          `}</style>\n        </Layout>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Icon,\n  Container,\n  Table,\n  Header,\n  List,\n  Grid,\n  Button,\n  Segment,\n  Form,\n  Message,\n  Card,\n  Image,\n  Modal\n} from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\n// import getCurrentUser from \"../utils/UserUtils\";\nimport axios from \"axios\";\n\nexport default class UserList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      usrs: [],\n      test: \"\",\n      isChosen: false,\n      isPromoted: false,\n      isComp: \"\",\n      inEdit: false,\n      isAdmin: false\n    };\n    //this.currentUser = getCurrentUser();\n    this.toEdit = this.toEdit.bind(this);\n    this.backEdit = this.backEdit.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  async componentDidMount() {\n    setInterval(async() => {\n      try {\n        const response = await axios.post(window.location.origin + \"/userlist\");\n        if (response.data.success) {\n          this.setState({ users: response.data.userData });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }, 2000);\n  }\n\n  async selectUser(member, e, dimmer) {\n    let currentUser = member.username;\n    try {\n      const response = await axios.post(window.location.origin + \"/usrs\", {\n        currentUser\n      });\n      if (response.data.success) {\n        this.setState({\n          usrs: response.data.userData,\n          isComp: response.data.isComp,\n          img1: response.data.pic1,\n          img2: response.data.pic2,\n          doc1: response.data.doc1,\n          doc2: response.data.doc2\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.setState({ dimmer, open: true, isChosen: true });\n  }\n\n  toEdit() {\n    this.setState({ inEdit: \"true\" });\n  }\n\n  backEdit() {\n    this.setState({ inEdit: \"false\" });\n  }\n\n  closeModal() {\n    this.setState({ open: false });\n  }\n\n  //TODO: Create UserProfile component with default template\n  render() {\n    const { open, dimmer } = this.state;\n    return (\n      <div>\n        {/* <Layout> */}\n        <Segment style={{ marginLeft: \"-234px\", width: \"1118px\" }}>\n          {/* <Header\n              as=\"h1\"\n              style={{\n                textAlign: \"center\",\n                marginTop: \"10px\",\n                color: \"#2985d0\"\n              }}\n            >\n              List of all Users\n            </Header> */}\n          {/* <Container > */}\n          {this.state.users.map(member => (\n            <Card\n              raised\n              style={{\n                height: \"400x\",\n                width: \"180px\",\n                display: \"inline-block\",\n                margin: \"18px\"\n              }}\n            >\n              {/* <Image src=\"../static/profile Icon.png\" /> */}\n              <Card.Content>\n                <Card.Header>\n                  {member.username}{\" \"}\n                  {member.isRegistered == \"yes\" ? (\n                    <Icon name=\"checkmark\" color=\"green\" style={{float: \"right\"}}/>\n                  ) : (\n                    <Icon name=\"x\" color=\"red\" style={{float: \"right\"}}/>\n                  )}\n                </Card.Header>\n                <Card.Meta>\n                  <span className=\"date\">Last Modified: 11.12.18</span>\n                </Card.Meta>\n                <Card.Description>\n                  {member.lname}, {member.fname}\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra style={{ textAlign: \"center\" }}>\n                <Button onClick={this.selectUser.bind(this, member)}>\n                  View Profile\n                </Button>\n              </Card.Content>\n            </Card>\n          ))}\n          {/* </Container> */}\n          {this.state.isChosen ? (\n            <Modal dimmer={dimmer} open={open} onClose={this.closeModal}>\n              <Modal.Header>\n                Profile of {this.state.usrs[0].username}\n              </Modal.Header>\n              <Modal.Content image>\n                <Modal.Description>\n                  <Header>Approval</Header>\n                  <Form>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Username\"\n                        value={this.state.usrs[0].username}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"ID\"\n                        value={this.state.usrs[0].id}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"First Name\"\n                        value={this.state.usrs[0].fname}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Last Name\"\n                        value={this.state.usrs[0].lname}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        readOnly\n                        width=\"eleven\"\n                        fluid\n                        label=\"Street\"\n                        value={this.state.usrs[0].street}\n                      />\n                      <Form.Input\n                        readOnly\n                        width=\"five\"\n                        type=\"number\"\n                        fluid\n                        label=\"House Number\"\n                        value={this.state.usrs[0].houseNr}\n                      />\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Input\n                        readOnly\n                        width=\"six\"\n                        fluid\n                        type=\"number\"\n                        label=\"Postal Code\"\n                        value={this.state.usrs[0].postCode}\n                      />\n                      <Form.Input\n                        readOnly\n                        width=\"ten\"\n                        fluid\n                        label=\"Place of Residence\"\n                        value={this.state.usrs[0].placeOfRes}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Date of Birth\"\n                        value={this.state.usrs[0].dateOfBirth}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Nationality\"\n                        value={this.state.usrs[0].nat}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\">\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Email\"\n                        type=\"email\"\n                        value={this.state.usrs[0].email}\n                      />\n                      <Form.Input\n                        readOnly\n                        fluid\n                        label=\"Mobile Number\"\n                        type=\"number\"\n                        value={this.state.usrs[0].mobNr}\n                      />\n                    </Form.Group>\n                    <Form.Group widths=\"equal\" style={{ margin: \"0px auto\" }}>\n                      {/* <Grid width={16}>\n                        <Grid.Column> */}\n                          <a\n                            href={`../static/${this.state.img1}`}\n                            target=\"_blank\"  \n                            style={{width: \"50%\"}}                          \n                          >\n                            <img\n                              className=\"img-responsive\"\n                              src={`../static/${this.state.img1}`}\n                              style={{\n                                width: \"200px\",\n                                height: \"113px\",\n                                // float: \"left\"\n                              }}\n                            />\n                          </a>\n                        {/* </Grid.Column>\n                        <Grid.Column> */}\n                          <a\n                            href={`../static/${this.state.img1}`}\n                            target=\"_blank\"\n                          >\n                            <img\n                              className=\"img-responsive\"\n                              src={`../static/${this.state.img2}`}\n                              style={{\n                                width: \"200px\",\n                                height: \"113px\",\n                                // float: \"right\"\n                              }}\n                            />\n                          </a>\n                        {/* </Grid.Column> */}\n                      {/* </Grid> */}\n                    </Form.Group>\n                    {this.state.usrs[0].isComp == \"1\" ? (\n                      <div>\n                        <Form.Group style={{ marginTop: \"10px\" }}>\n                          <Form.Input\n                            readOnly\n                            width=\"sixteen\"\n                            fluid\n                            label=\"Company Name\"\n                            value={this.state.usrs[0].compName}\n                          />\n                        </Form.Group>\n                        <Form.Group>\n                          <Form.Input\n                            readOnly\n                            width=\"eleven\"\n                            fluid\n                            label=\"Business Address\"\n                            value={this.state.usrs[0].businessAd}\n                          />\n                          <Form.Input\n                            readOnly\n                            width=\"five\"\n                            fluid\n                            label=\"House Number\"\n                            value={this.state.usrs[0].compHouseNr}\n                          />\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                          <Form.Input\n                            readOnly\n                            width=\"six\"\n                            fluid\n                            label=\"Postal Code\"\n                            value={this.state.usrs[0].compPostCode}\n                          />\n                          <Form.Input\n                            readOnly\n                            width=\"ten\"\n                            fluid\n                            label=\"Place of Residenz\"\n                            value={this.state.usrs[0].residence}\n                          />\n                        </Form.Group>\n                        <Form.Group\n                          width=\"sixteen\"\n                          style={{ margin: \"0px auto\" }}\n                        >\n                          <Icon name=\"linkify\" />\n                          <a\n                            href={`../static/${this.state.doc1}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View extract of the relevant registration authority\n                          </a>\n                        </Form.Group>\n                        <Form.Group\n                          width=\"sixteen\"\n                          style={{ margin: \"0px auto\" }}\n                        >\n                          <Icon name=\"linkify\" />\n                          <a\n                            href={`../static/${this.state.doc2}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View electronic copy of the power of attorney\n                          </a>\n                        </Form.Group>\n                      </div>\n                    ) : null}\n                  </Form>\n                </Modal.Description>\n              </Modal.Content>\n              <Modal.Actions>\n                <Container\n                  style={{ textAlign: \"center\", display: \"inline-block\" }}\n                >\n                  <Button color=\"black\" onClick={this.closeModal}>\n                    Close\n                  </Button>\n                </Container>\n              </Modal.Actions>\n            </Modal>\n          ) : null}\n        </Segment>\n        {/* </Layout> */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProfileHeader from \"../components/ProfileHeader\";\nimport Layout from \"../components/Layout\";\nimport MediaHandler from \"../webrtc/MediaHandler\";\nimport Pusher from \"pusher-js\";\nimport Peer from \"simple-peer\";\nconst APP_KEY = \"0f924dcd44dc93a88aa7\"; //Pusher Key\nimport { setCookie } from \"../utils/CookieUtils\";\nimport authenticator from \"otplib/authenticator\";\nimport OtpInput from \"react-otp-input\";\nimport { Tesseract } from \"tesseract.ts\";\nconst parse = require(\"mrz\").parse;\nimport {\n  Header,\n  Message,\n  Segment,\n  Button,\n  Icon,\n  Container,\n  Grid,\n  Dimmer,\n  Loader\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { Router } from \"../routes\";\nimport swal from \"sweetalert2\";\nlet xsrfToken = \"\";\nlet pusher;\nlet peer;\nlet channelName;\nlet userName;\nlet userNames = [];\nlet token = \"\";\nauthenticator.options = { step: 60 };\n\nexport default class VideoChat extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasMedia: false,\n      userName: \"\",\n      otherUserId: null,\n      // role: \"\",\n      isNotCalled: \"true\",\n      message: \"\",\n      waitingMessage: \"\",\n      loading: false,\n      countMembers: \"\",\n      isEdited: \"\",\n      activeItem: \"videochat\",\n      ethAddresses: [],\n      ethAddressArray: [],\n      message: \"\",\n      sent: false,\n      idIsValid: \"\"\n    };\n\n    this.currentUser = {\n      id: \"\",\n      stream: undefined\n    };\n\n    this.peers = [];\n\n    this.mediaHandler = new MediaHandler();\n\n    this.setupPusher = this.setupPusher.bind(this);\n    this.startPeer = this.startPeer.bind(this);\n    // this.endCall = this.endCall.bind(this);\n    // this.approval = this.approval.bind(this);\n    this.show = this.show.bind(this);\n    // this.closeModal = this.closeModal.bind(this);\n  }\n\n  async componentWillMount() {\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/videochat/stream\",\n        { timeout: 60 * 4 * 1000 }\n      );\n      this.setState({\n        userName: response.data.currentUser,\n        role: response.data.role\n      });\n      this.currentUser.id = this.state.userName;\n      xsrfToken = response.data.token;\n    } catch (e) {\n      console.log(e);\n    }\n\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({ hasMedia: true });\n      this.currentUser.stream = stream;\n      try {\n        let myVideo = document.getElementById(\"my-video\");\n        myVideo.srcObject = stream;\n        const playPromise = myVideo.play();\n\n        if (playPromise !== null) {\n          playPromise\n            .then(() => {\n              return myVideo.play();\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      } catch (e) {\n        console.log(e.stack);\n      }\n    });\n\n    this.setupPusher();\n    return;\n  }\n\n  setupPusher() {\n    //Pusher.logToConsole = true;\n    pusher = new Pusher(APP_KEY, {\n      authEndpoint: \"/pusher/auth\",\n      cluster: \"eu\",\n      auth: {\n        params: this.currentUser.id,\n        headers: {\n          \"X-XSRF-Token\": xsrfToken\n        }\n      }\n    });\n\n    channelName = pusher.subscribe(\"presence-video-channel\"); //requires auth\n\n    // channelName.bind(\"pusher:subscription_succeeded\", member => {\n    // userNames = members.id;\n    // channelName.members.each(member => {\n    //   userNames = member.id;\n    //   // userNames.push(member.id)\n    //   console.log(userNames)\n    // })\n    // console.log(countMembers);\n    // });\n\n    channelName.bind(\"pusher:member_added\", member => {\n      swal(\"You are conneted to\", `${member.id}`, \"success\");\n\n      // userName = member.id;\n\n      if (userNames.includes(member.id) === false) {\n        userNames.push(member.id);\n      }\n\n      console.log(userNames);\n\n      // let newConnect = member.id;\n      // // swal(\"Attention\", \"Admin is occupied, please wait...\", \"warning\");\n      // axios.post(window.location.origin + \"/pusher/count\", {\n      //   newConnect\n      // });\n    });\n\n    channelName.bind(\"pusher:member_removed\", member => {\n      console.log(userName);\n      let i = userNames.indexOf(userName);\n      userNames.splice(i, 1);\n      // this.show();\n      console.log(userNames);\n      // swal(\"Removed `${member.id}`\", \"Please press End Call to approve or decline the user\" , \"success\");\n      //reload admin page?\n    });\n\n    channelName.bind(`client-signal-${this.currentUser.id}`, signal => {\n      let peer = this.peers[signal.userId];\n      // if peer does not already exist, we got an incoming call\n      if (peer === undefined) {\n        // this.setState({ otherUserId: signal.userId });\n        peer = this.startPeer(signal.userId, false);\n\n        //callee //if offer is sent, stop!\n      }\n      peer.signal(signal.data);\n    });\n  }\n\n  startPeer(userId, initiator = true) {\n    //caller\n    //TODO: initiator is always user!\n    peer = new Peer({\n      initiator,\n      stream: this.currentUser.stream,\n      trickle: false\n    });\n\n    peer.on(\"signal\", data => {\n      channelName.trigger(`client-signal-${userId}`, {\n        type: \"signal\",\n        userId: this.currentUser.id,\n        data: data\n      });\n    });\n\n    peer.on(\"stream\", stream => {\n      try {\n        let userVideo = document.getElementById(\"user-video\");\n        userVideo.srcObject = stream;\n        const playPromise = userVideo.play();\n\n        if (playPromise !== null) {\n          playPromise\n            .then(() => {\n              return userVideo.play();\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      } catch (e) {\n        console.log(e.stack);\n      }\n    });\n\n    return peer;\n  }\n\n  callTo = async userId => {\n    // console.log(`starting Pusher: ${userId}`);\n    this.setState({ isNotCalled: false });\n    //TODO: show encall button only when in call?\n    this.peers[userId] = this.startPeer(userId);\n    let currentUser = userId;\n    let response = await axios.post(window.location.origin + \"/usrs\", {\n      currentUser\n    });\n    if (response.data.success) {\n      this.setState({\n        img1: response.data.pic1,\n        img2: response.data.pic2,\n        doc1: response.data.doc1,\n        doc2: response.data.doc2\n      });\n    }\n  };\n\n  decline = async () => {\n    peer.destroy();\n    let response = await axios.post(window.location.origin + \"/decline\", {\n      userName\n    });\n    if (response.data.success) {\n      swal(\"User declined\", \"\", \"success\");\n      this.setState({ isCalled: false });\n    } else {\n      console.log(\"something went wrong!\");\n    }\n  };\n\n  show(dimmer) {\n    this.setState({ dimmer, open: true });\n  }\n\n  returnHome = () => {\n    this.setState({ open: false });\n    setCookie(\"x-access-token\", \"\", -60 * 60);\n    window.location.href = \"/login\";\n    Router.push(\"/login\");\n  };\n\n  sendOTP = async () => {\n    let otpSecret = authenticator.generateSecret();\n    console.log(otpSecret);\n    token = authenticator.generate(otpSecret);\n    console.log(token);\n    console.log(userName);\n    let isValid = authenticator.check(token, otpSecret);\n    console.log(isValid);\n    let response = await axios.post(window.location.origin + \"/createOTP\", {\n      userName,\n      token,\n      otpSecret\n    });\n    if (response.data.success) {\n      swal(\"OTP sent!\", \"\", \"success\");\n      this.setState({ isCalled: false });\n    }\n  };\n\n  otpVerify = async () => {\n    let res = await axios.post(window.location.origin + \"/otpSecret\");\n    if (res.data.success) {\n      let otpSecret = res.data.otpSecret;\n      console.log(otpSecret);\n      console.log(this.state.otp);\n      let isValid = authenticator.check(this.state.otp, otpSecret);\n      console.log(isValid);\n      if (isValid) {\n        let response = await axios.post(window.location.origin + \"/approval\");\n        if (response.data.success) {\n          setCookie(\"x-access-token\", \"\", -60 * 60);\n          window.location.href = \"/login\";\n          Router.push(\"/login\");\n        } else {\n          console.log(\"oops\");\n        }\n      } else {\n        this.setState({ message: \"wrong OTP!\" });\n      }\n    }\n    peer.destroy();\n  };\n\n  ocrScan = () => {\n    this.setState({ loadingOCR: true });\n    let image = document.getElementById(\"id-back\");\n    Tesseract.recognize(image).then((result, err) => {\n      if (err) {\n        console.log(err);\n      }\n      let ocrText1 = JSON.stringify(result.text).substring(1, 31);\n      let ocrText2 = JSON.stringify(result.text).substring(33, 63);\n      let ocrText3 = JSON.stringify(result.text).substring(65, 95);\n      let ocrLines = [];\n      ocrLines.push(ocrText1, ocrText2, ocrText3);\n      let res = parse(ocrLines);\n      if (res.valid === true) {\n        this.setState({ idIsValid: true });\n      } else {\n        this.setState({ idIsValid: false });\n      }\n      this.setState({ loadingOCR: false, ocr: result.text, isCalled: true });\n    });\n  };\n\n  //TODO: Crop Function!!\n\n  // show(dimmer) {\n  //   this.setState({ dimmer, open: true });\n  // }\n  // closeModal() {\n  //   this.setState({ open: false });\n  // }\n\n  render() {\n    return (\n      <div>\n        {/* <Layout> */}\n        <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n        {this.state.role == 1 ? (\n            <Segment style={{ marginTop: \"16px\", width: \"100%\" }}>\n              <Grid>\n                <Grid.Row>\n                  <Grid.Column width={8}>\n                      <Container\n                        className=\"video-container\"\n                        style={{\n                          width: \"500px\",\n                          height: \"380px\",\n                          margin: \"0px auto\",\n                          border: \"2px solid black\",\n                          position: \"relative\"\n                        }}\n                      >\n                        <video\n                          className=\"my-video\"\n                          id=\"my-video\"\n                          style={{\n                            width: \"130px\",\n                            position: \"absolute\",\n                            left: \"10px\",\n                            bottom: \"10px\",\n                            border: \"2px solid #0061ff\",\n                            zIndex: \"2\"\n                          }}\n                        />\n                        <video\n                          className=\"user-video\"\n                          id=\"user-video\"\n                          style={{\n                            position: \"absolute\",\n                            left: \"0\",\n                            right: \"0\",\n                            bottom: \"0\",\n                            top: \"0\",\n                            width: \"100%\",\n                            height: \"100%\",\n                            zIndex: \"1\"\n                          }}\n                        />\n                      </Container>\n                    <br />\n                  </Grid.Column>\n                  <Grid.Column width=\"eight\">\n                    {/* {this.state.isCaptured ? */}\n                    {/* {this.state.img1 ? ( */}\n                    <div>\n                      <Container\n                        style={{\n                          display: \"inline-block\",\n                          width: \"100%\",\n                          height: \"282.5px\",\n                          marginBottom: \"0px\"\n                        }}\n                      >\n                        <img\n                          id=\"id-back\"\n                          className=\"img-responsive\"\n                          // src={`../static/${this.state.img1}`}\n                          src={\"../static/vbnm-ID.png\"}\n                          style={{\n                            // width: \"500px\",\n                            // height: \"282.5px\"\n                            width: \"100%\",\n                            height: \"88%\"\n                            // float: \"left\"\n                          }}\n                        />\n                      </Container>\n                      {this.state.idIsValid ? (\n                        <Message\n                          header=\"Valid!\"\n                          success\n                          content={this.state.ocr}\n                          style={{\n                            boxShadow: \"1px 1px 11px green\",\n                            border: \"1px solid green\"\n                          }}\n                        />\n                      ) : this.state.idIsValid === false ? (\n                        <Message\n                          header=\"NOT Valid!\"\n                          success\n                          content={this.state.ocr}\n                          style={{\n                            boxShadow: \"1px 1px 11px red\",\n                            border: \"1px solid red\"\n                          }}\n                        />\n                      ) : null}\n                      {/* ) : null} */}\n                      {/* : null } */}\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column width=\"eight\">\n                    <Container\n                      style={{\n                        display: \"inline-block\",\n                        // textAlign: \"center\",\n                        marginTop: \"10px\",\n                        width: \"64%\",\n                        marginBottom: \"10px\"\n                      }}\n                    >\n                      <Button\n                        animated\n                        floated=\"left\"\n                        onClick={this.sendOTP}\n                        style={{\n                          backgroundColor: \"white\",\n                          border: \"1px solid black\",\n                          width: \"32%\"\n                        }}\n                      >\n                        <Button.Content visible>\n                          <Icon name=\"send\" color=\"green\" />\n                        </Button.Content>\n                        <Button.Content hidden>Send OTP</Button.Content>\n                      </Button>\n                      <Button\n                        animated\n                        floated=\"left\"\n                        onClick={this.decline}\n                        style={{\n                          backgroundColor: \"white\",\n                          border: \"1px solid black\",\n                          width: \"32%\"\n                        }}\n                      >\n                        <Button.Content visible>\n                          <Icon name=\"close\" color=\"red\" />\n                        </Button.Content>\n                        <Button.Content hidden>Quit Call</Button.Content>\n                      </Button>\n                      {userNames.map(userId => {\n                        return this.currentUser.id !== userId &&\n                          // this.state.isNotCalled ? (\n                          userNames != [] ? (\n                          <Button\n                            key={userId}\n                            animated\n                            floated=\"left\"\n                            key={userId}\n                            onClick={() => {\n                              this.callTo(userId);\n                              userName = userId;\n                            }}\n                            style={{\n                              backgroundColor: \"white\",\n                              border: \"1px solid black\",\n                              width: \"32%\"\n                            }}\n                          >\n                            {\" \"}\n                            <Button.Content visible>\n                              Call {userId}\n                            </Button.Content>\n                            <Button.Content hidden>\n                              <Icon name=\"phone\" color=\"blue\" />\n                            </Button.Content>\n                          </Button>\n                        ) : null;\n                      })}\n                    </Container>\n                  </Grid.Column>\n                  <Grid.Column width=\"eight\">\n                    <Container style={{ textAlign: \"center\" }}>\n                      <Button\n                        onClick={this.ocrScan}\n                        loading={this.state.loadingOCR}\n                      >\n                        Validate MRZ Code\n                      </Button>\n                    </Container>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Segment>\n        ) : (\n          <div>\n            <Segment style={{ marginTop: \"50px\" }}>\n              <Container\n                className=\"video-container\"\n                style={{\n                  width: \"500px\",\n                  height: \"376px\",\n                  margin: \"0px auto\",\n                  border: \"2px solid black\",\n                  position: \"relative\"\n                }}\n              >\n                <video\n                  className=\"my-video\"\n                  id=\"my-video\"\n                  style={{\n                    width: \"130px\",\n                    position: \"absolute\",\n                    left: \"10px\",\n                    bottom: \"10px\",\n                    border: \"2px solid #0061ff\",\n                    zIndex: \"2\"\n                  }}\n                />\n                <video\n                  className=\"user-video\"\n                  id=\"user-video\"\n                  style={{\n                    position: \"absolute\",\n                    left: \"0\",\n                    right: \"0\",\n                    bottom: \"0\",\n                    top: \"0\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    zIndex: \"1\"\n                  }}\n                />\n              </Container>\n              {this.state.sent ? (\n                <Message\n                  success\n                  header=\"Success\"\n                  content={this.state.message}\n                />\n              ) : null}\n              <br />\n              <Container style={{ width: \"71%\", marginBottom: \"13px\" }}>\n                <OtpInput\n                  value={this.state.otp}\n                  onChange={otp => {\n                    this.setState({ otp: otp, otpEntered: true });\n                  }}\n                  // onChange={otp => console.log(otp)}\n                  numInputs={6}\n                  separator={<span>-</span>}\n                />\n                {this.state.message ? (\n                  <Message error header=\"Oops!\" content={this.state.message} />\n                ) : null}\n              </Container>\n              {this.state.otpEntered ? (\n                <Button\n                  style={{\n                    color: \"white\",\n                    backgroundColor: \"#ff3344\",\n                    width: \"50%\",\n                    margin: \"0px auto\"\n                  }}\n                  fluid\n                  onClick={this.otpVerify}\n                >\n                  Submit\n                </Button>\n              ) : null}\n\n              <Button\n                id=\"returnHome\"\n                style={{\n                  color: \"white\",\n                  width: \"50%\",\n                  margin: \"0px auto\"\n                }}\n                fluid\n                onClick={this.returnHome}\n              >\n                Submit\n              </Button>\n            </Segment>\n          </div>\n        )}\n        {/* </Layout> */}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport VideoChat from \"../components/VideoChat\";\n\nexport default class VideoChatPage extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <VideoChat />\n        </Layout>\n      </div>\n    );\n  }\n}\n","const routes = require(\"next-routes\")();\n\nmodule.exports = routes;\nroutes.add(\"passwordchange\", \"/passwordchange/:id\", \"passwordchange\");\n","//set cookie function\nexport function setCookie(cname, cvalue, exdays) {\n  let d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname + \"=\" + cvalue + \";\" + expires + \"HttpOnly;\" + \";path=/\";\n}\n\n//get cookie function\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","//Function to get the users media\nexport default class MediaHandler {\n  getPermissions() {\n    return new Promise((resolve, rej) => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: false }) //TODO: change to true\n        .then(stream => {\n          resolve(stream);\n        })\n        .catch(err => {\n          throw new Error(`Unable to fetch stream ${err}`);\n        });\n    });\n  }\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"mrz\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"otplib/authenticator\");","module.exports = require(\"pusher-js\");","module.exports = require(\"react\");","module.exports = require(\"react-otp-input\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"simple-peer\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"sweetalert2\");","module.exports = require(\"tesseract.ts\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAFA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AARA;AAQA;AACA;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AASA;;;;AAzDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAeA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA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AAsOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvOA;AAAA;AAAA;AAAA;AAAA;AAyPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AACA;AADA;AAkBA;AAAA;AAAA;AACA;AAnBA;AAqBA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1PA;AAkRA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAmBA;AACA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AApCA;AAqCA;AACA;;;;;;;;;;;;;;;;AAGA;AAEA;AAAA;AACA;;AAHA;AAIA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAkCA;AACA;AAAA;AAAA;AAAA;AACA;;;AA0EA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAHA;AAiBA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAIA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAaA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAHA;AAiBA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AACA;AAPA;AAUA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AARA;AAeA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AARA;AAkBA;;;;AA9kBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAOA;;;;AATA;AACA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}