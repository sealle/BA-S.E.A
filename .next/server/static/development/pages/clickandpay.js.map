{"version":3,"file":"static/development/pages/clickandpay.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout.js","webpack:///./ethereum/src/contract.js","webpack:///./ethereum/src/web3.js","webpack:///./pages/clickandpay.js","webpack:///./routes.js","webpack:///./utils/CookieUtils.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"sweetalert2\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nexport default props => {\n  return (\n    <Container style={{ width: 650, border: 1 }}>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\n        />\n      </Head>\n      <style jsx global>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n\n      {props.children}\n    </Container>\n  );\n};\n","import web3 from \"./web3\";\n\n//contract address and ABI/Interface to connect to it\nconst contractAddress = \"0x0523A4Da9E7f1eBcbcb5BeBa44440D4Ac4Ef0F5A\"; //address of SC\nconst contractABI = [\n  {\n    constant: false,\n    inputs: [{ name: \"confirmed\", type: \"bool\" }],\n    name: \"answer\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getHashes\",\n    outputs: [{ name: \"\", type: \"bytes32[]\" }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: \"kycKey\", type: \"string\" },\n      { name: \"platformAddress\", type: \"address\" }\n    ],\n    name: \"verify\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [{ name: \"newHash\", type: \"bytes32\" }],\n    name: \"storeHash\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"payKYC\",\n    outputs: [],\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"function\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: false, name: \"kycKey\", type: \"string\" },\n      { indexed: false, name: \"platformAddress\", type: \"address\" },\n      { indexed: false, name: \"sender\", type: \"address\" }\n    ],\n    name: \"KycListen\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, name: \"confirmed\", type: \"bool\" }],\n    name: \"PlatformListen\",\n    type: \"event\"\n  }\n];\n\nexport default new web3.eth.Contract(contractABI, contractAddress);\n","import Web3 from \"web3\";\n\n//use givenProvider to access the ethereum network\nconst web3 = new Web3(Web3.givenProvider || \"ws://localhost:3000\");\n\nexport default web3;\n","import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  Icon,\n  Segment,\n  Dimmer,\n  Loader,\n  Image,\n  Form,\n  Radio,\n  Message\n} from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport { setCookie } from \"../utils/CookieUtils\";\nimport web3 from \"../ethereum/src/web3\";\nimport contract from \"../ethereum/src/contract\";\nimport swal from \"sweetalert2\";\n\n//only for banks\nclass Assets extends Component {\n  constructor() {\n    super();\n    this.state = {\n      moreThanTwo: \"\",\n      loading: false,\n      checkedAssets1: false,\n      checkedAssets2: false,\n      countMembers: \"\",\n      terms: false,\n      pay: false,\n      checked3: false,\n      checked4: false,\n      checked5: false,\n      checked6: false,\n      error: false,\n      value: \"\",\n      metaMask: true,\n      waiting: false\n    };\n  }\n\n  async componentWillMount() {\n    //checking whether user is logged in to metamask\n    setInterval(() => {\n      web3.eth.getAccounts((err, accounts) => {\n        if (err != null) console.error(\"An error occurred: \" + err);\n        else if (accounts.length == 0) this.setState({ metaMask: false });\n        else this.setState({ metaMask: true, myAddress: accounts[0] });\n      });\n    }, 500);\n  }\n\n  //handle the checkboxes for beneficial owners\n  handleCheckAssets1 = () => {\n    if (this.state.checkedAssets2 === true) {\n      this.setState({ checkedAssets2: false, checkedAssets1: true });\n    }\n    this.setState({ checkedAssets1: !this.state.checkedAssets1 });\n  };\n\n  //handle the checkboxes for beneficial owners\n  handleCheckAssets2 = () => {\n    if (this.state.checkedAssets1 === true) {\n      this.setState({ checkedAssets1: false, checkedAssets2: true });\n    }\n    this.setState({ checkedAssets2: !this.state.checkedAssets2 });\n  };\n\n  //send beneficial owner data to server\n  ownerFormSubmit = async() => {\n    this.setState({ loading: true });\n\n    const formData = new FormData();\n\n    //send data of the first beneficial owner because it is required\n    formData.append(\"ownerFname\", this.state.ownerFname);\n    formData.append(\"ownerLname\", this.state.ownerLname);\n    formData.append(\"ownerStreet\", this.state.ownerStreet);\n    formData.append(\"ownerHouseNr\", this.state.ownerHouseNr);\n    formData.append(\"ownerPostCode\", this.state.ownerPostCode);\n    formData.append(\"ownerPlaceOfRes\", this.state.ownerPlaceOfRes);\n    formData.append(\"ownerDateOfBirth\", this.state.ownerDateOfBirth);\n\n    //check if the user has entered data for a second beneficial Owner\n    if (\n      this.state.ownerFname2 &&\n      this.state.ownerLname2 &&\n      this.state.ownerStreet2 &&\n      this.state.ownerHouseNr2 &&\n      this.state.ownerPostCode2 &&\n      this.state.ownerPlaceOfRes2 &&\n      this.state.ownerDateOfBirth2\n    ) {\n      formData.append(\"ownerFname2\", this.state.ownerFname2);\n      formData.append(\"ownerLname2\", this.state.ownerLname2);\n      formData.append(\"ownerStreet2\", this.state.ownerStreet2);\n      formData.append(\"ownerHouseNr2\", this.state.ownerHouseNr2);\n      formData.append(\"ownerPostCode2\", this.state.ownerPostCode2);\n      formData.append(\"ownerPlaceOfRes2\", this.state.ownerPlaceOfRes2);\n      formData.append(\"ownerDateOfBirth2\", this.state.ownerDateOfBirth2);\n    }\n\n    //check if the user has entered data for a third beneficial Owner\n    if (\n      this.state.ownerFname3 &&\n      this.state.ownerLname3 &&\n      this.state.ownerStreet3 &&\n      this.state.ownerHouseNr3 &&\n      this.state.ownerPostCode3 &&\n      this.state.ownerPlaceOfRes3 &&\n      this.state.ownerDateOfBirth3\n    ) {\n      formData.append(\"ownerFname3\", this.state.ownerFname3);\n      formData.append(\"ownerLname3\", this.state.ownerLname3);\n      formData.append(\"ownerStreet3\", this.state.ownerStreet3);\n      formData.append(\"ownerHouseNr3\", this.state.ownerHouseNr3);\n      formData.append(\"ownerPostCode3\", this.state.ownerPostCode3);\n      formData.append(\"ownerPlaceOfRes3\", this.state.ownerPlaceOfRes3);\n      formData.append(\"ownerDateOfBirth3\", this.state.ownerDateOfBirth3);\n    }\n\n    let response = await axios.post(\n      window.location.origin + \"/assets\",\n      formData\n    );\n    if (response.data.success) {\n      this.setState({ loading: false, terms: true, pay: false });\n    }\n  }\n\n  //execute ether payment\n  submit = async () => {\n    //get eth accounts\n    let accounts = await web3.eth.getAccounts();\n\n    if (this.state.value > 0) {\n      this.setState({ loading: true, waiting: true, error: false });\n      //execute payment to admin address if value > 0\n      await contract.methods.payKYC().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\")\n      });\n      swal({\n        title: \"Thank You!\",\n        text: \"You will be redirected to the video identification\",\n        type: \"success\",\n        onClose: async () => {\n          //get videochat token from server to store in cookie\n          let response = await axios.post(\n            window.location.origin + \"/clickandpay\"\n          );\n          if (response.data.success) {\n            console.log(\"success\");\n            setCookie(\"x-access-token\", response.data.videoCookie, 1);\n            Router.push(\"/videochat\");\n          }\n        }\n      });\n    } else if (this.state.value === \"\") {\n      this.setState({ error: true });\n    } else {\n      //if value = 0 redirect user to video chat\n      swal({\n        title: \"Thank You!\",\n        text: \"You will be redirected to the video identification\",\n        type: \"success\",\n        onClose: async () => {\n          //get videochat token from server to store in cookie\n          let response = await axios.post(\n            window.location.origin + \"/clickandpay\"\n          );\n          if (response.data.success) {\n            console.log(\"success\");\n            setCookie(\"x-access-token\", response.data.videoCookie, 1);\n            Router.push(\"/videochat\");\n          }\n        }\n      });\n    }\n    this.setState({ loading: false, waiting: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          {/* <p>{this.state.moreThanTwo}</p> */}\n          <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          {this.state.terms == false && this.state.pay == false ? (\n            <Segment style={{ marginTop: \"50px\" }}>\n              {/* <Dimmer active={this.state.loading}>\n                <Loader>Admin is in a Call...</Loader>\n              </Dimmer> */}\n              <br />\n              <Header\n                as=\"h1\"\n                textAlign=\"center\"\n                style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n              >\n                Identification of the Beneficial Owner\n              </Header>\n              <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n                If the deposited assets are credited to you economically, agree\n                with signing the checkbox below\n              </Header>\n              <Container textAlign=\"center\">\n                <Divider />\n                <Checkbox\n                  label=\"I agree that I am the sole beneficial owner of the assets\"\n                  required\n                  checked={this.state.checkedAssets1}\n                  onChange={this.handleCheckAssets1}\n                />\n                {this.state.checkedAssets1 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I agree that the following persons are beneficial owners of the assets\"\n                  required\n                  checked={this.state.checkedAssets2}\n                  onChange={this.handleCheckAssets2}\n                />\n                {this.state.checkedAssets2 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                {this.state.checkedAssets2 ? (\n                  <div style={{ marginBottom: \"10px\" }}>\n                    <Segment style={{ textAlign: \"left\" }}>\n                      <p\n                        style={{\n                          fontWeight: \"bold\",\n                          fontWeight: \"900\",\n                          fontSize: \"17px\",\n                          borderRadius: \"100%\",\n                          display: \"inline\",\n                          paddingLeft: \"6px\",\n                          paddingRight: \"7px\",\n                          backgroundColor: \"black\",\n                          color: \"white\"\n                        }}\n                      >\n                        1\n                      </p>\n                      <Form\n                        onSubmit={this.ownerFormSubmit}\n                        style={{ marginTop: \"1%\" }}\n                      >\n                        <Segment>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"First Name\"\n                              placeholder=\"First Name\"\n                              required\n                              name=\"ownerFname\"\n                              value={this.state.ownerFname}\n                              onChange={event =>\n                                this.setState({\n                                  ownerFname: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              fluid\n                              label=\"Last Name\"\n                              placeholder=\"Last Name\"\n                              required\n                              name=\"ownerlastName\"\n                              value={this.state.ownerLname}\n                              onChange={event =>\n                                this.setState({\n                                  ownerLname: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"eleven\"\n                              fluid\n                              label=\"Street\"\n                              placeholder=\"Street\"\n                              required\n                              name=\"ownerStreet\"\n                              value={this.state.ownerStreet}\n                              onChange={event =>\n                                this.setState({\n                                  ownerStreet: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"five\"\n                              fluid\n                              label=\"House Number\"\n                              required\n                              placeholder=\"House Number\"\n                              name=\"ownerHouseNr\"\n                              value={this.state.ownerHouseNr}\n                              onChange={event =>\n                                this.setState({\n                                  ownerHouseNr: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"six\"\n                              fluid\n                              type=\"number\"\n                              label=\"Postal Code\"\n                              required\n                              placeholder=\"Postal Code\"\n                              name=\"ownerPostCode\"\n                              value={this.state.ownerPostCode}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPostCode: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"ten\"\n                              fluid\n                              label=\"Place of Residenz\"\n                              required\n                              placeholder=\"Place of Residence\"\n                              name=\"ownerPlaceOfRes\"\n                              value={this.state.ownerPlaceOfRes}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPlaceOfRes: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"Date of Birth\"\n                              required\n                              placeholder=\"DD.MM.YYYY\"\n                              name=\"ownerDateOfBirth\"\n                              value={this.state.ownerDateOfBirth}\n                              onChange={event =>\n                                this.setState({\n                                  ownerDateOfBirth: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                        </Segment>\n                        <Segment style={{ textAlign: \"left\", marginTop: \"1%\" }}>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              fontWeight: \"900\",\n                              fontSize: \"17px\",\n                              borderRadius: \"100%\",\n                              display: \"inline\",\n                              paddingLeft: \"6px\",\n                              paddingRight: \"7px\",\n                              backgroundColor: \"black\",\n                              color: \"white\"\n                            }}\n                          >\n                            2\n                          </p>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"First Name\"\n                              placeholder=\"First Name\"\n                              name=\"ownerFname2\"\n                              value={this.state.ownerFname2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerFname2: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              fluid\n                              label=\"Last Name\"\n                              placeholder=\"Last Name\"\n                              name=\"ownerLname2\"\n                              value={this.state.ownerLname2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerLname2: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"eleven\"\n                              fluid\n                              label=\"Street\"\n                              placeholder=\"Street\"\n                              name=\"ownerStreet2\"\n                              value={this.state.ownerStreet2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerStreet2: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"five\"\n                              fluid\n                              label=\"House Number\"\n                              placeholder=\"House Number\"\n                              name=\"ownerHouseNr2\"\n                              value={this.state.ownerHouseNr2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerHouseNr2: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"six\"\n                              fluid\n                              type=\"number\"\n                              label=\"Postal Code\"\n                              placeholder=\"Postal Code\"\n                              name=\"ownerPostCode2\"\n                              value={this.state.ownerPostCode2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPostCode2: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"ten\"\n                              fluid\n                              label=\"Place of Residenz\"\n                              placeholder=\"Place of Residence\"\n                              name=\"ownerPlaceOfRes2\"\n                              value={this.state.ownerPlaceOfRes2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPlaceOfRes2: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"Date of Birth\"\n                              placeholder=\"DD.MM.YYYY\"\n                              name=\"ownerDateOfBirth2\"\n                              value={this.state.ownerDateOfBirth2}\n                              onChange={event =>\n                                this.setState({\n                                  ownerDateOfBirth2: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                        </Segment>\n                        <Segment style={{ textAlign: \"left\", marginTop: \"1%\" }}>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              fontWeight: \"900\",\n                              fontSize: \"17px\",\n                              borderRadius: \"100%\",\n                              display: \"inline\",\n                              paddingLeft: \"6px\",\n                              paddingRight: \"7px\",\n                              backgroundColor: \"black\",\n                              color: \"white\"\n                            }}\n                          >\n                            3\n                          </p>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"First Name\"\n                              placeholder=\"First Name\"\n                              name=\"ownerFname3\"\n                              value={this.state.ownerFname3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerFname3: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              fluid\n                              label=\"Last Name\"\n                              placeholder=\"Last Name\"\n                              name=\"ownerLname3\"\n                              value={this.state.ownerLname3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerLname3: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"eleven\"\n                              fluid\n                              label=\"Street\"\n                              placeholder=\"Street\"\n                              name=\"ownerStreet3\"\n                              value={this.state.ownerStreet3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerStreet3: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"five\"\n                              fluid\n                              label=\"House Number\"\n                              placeholder=\"House Number\"\n                              name=\"ownerHouseNr3\"\n                              value={this.state.ownerHouseNr3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerHouseNr3: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group>\n                            <Form.Input\n                              width=\"six\"\n                              fluid\n                              type=\"number\"\n                              label=\"Postal Code\"\n                              placeholder=\"Postal Code\"\n                              name=\"ownerPostCode3\"\n                              value={this.state.ownerPostCode3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPostCode3: event.target.value\n                                })\n                              }\n                            />\n                            <Form.Input\n                              width=\"ten\"\n                              fluid\n                              label=\"Place of Residenz\"\n                              placeholder=\"Place of Residence\"\n                              name=\"ownerPlaceOfRes3\"\n                              value={this.state.ownerPlaceOfRes3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerPlaceOfRes3: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                          <Form.Group widths=\"equal\">\n                            <Form.Input\n                              fluid\n                              label=\"Date of Birth\"\n                              placeholder=\"DD.MM.YYYY\"\n                              name=\"ownerDateOfBirth3\"\n                              value={this.state.ownerDateOfBirth3}\n                              onChange={event =>\n                                this.setState({\n                                  ownerDateOfBirth3: event.target.value\n                                })\n                              }\n                            />\n                          </Form.Group>\n                        </Segment>\n                        <Container style={{ display: \"inline-block\" }}>\n                          <Button\n                            primary\n                            icon\n                            floated=\"right\"\n                            labelPosition=\"right\"\n                            // onClick={this.toTerms}\n                          >\n                            Next\n                            <Icon name=\"right arrow\" />\n                          </Button>\n                        </Container>\n                      </Form>\n                    </Segment>\n                  </div>\n                ) : null}\n              </Container>\n              <Container style={{ display: \"inline-block\" }}>\n                {this.state.checkedAssets1 ? (\n                  <Button\n                    primary\n                    icon\n                    floated=\"right\"\n                    labelPosition=\"right\"\n                    onClick={() => this.setState({ terms: true, pay: false })}\n                  >\n                    Next\n                    <Icon name=\"right arrow\" />\n                  </Button>\n                ) : !this.state.checkedAssets1 && !this.state.checkedAssets2 ? (\n                  <Button\n                    primary\n                    icon\n                    floated=\"right\"\n                    labelPosition=\"right\"\n                    disabled\n                  >\n                    Next\n                    <Icon name=\"right arrow\" />\n                  </Button>\n                ) : null}\n              </Container>\n            </Segment>\n          ) : this.state.terms == true && this.state.pay == false ? (\n            <Segment style={{ marginTop: \"50px\" }}>\n              {/* <Dimmer active={this.state.loading}>\n                <Loader>Admin is in a Call...</Loader>\n              </Dimmer> */}\n              <br />\n              <Header\n                as=\"h1\"\n                textAlign=\"center\"\n                style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n              >\n                Terms and Conditions\n              </Header>\n              <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n                Make sure you accept all terms and conditions\n              </Header>\n              <Container textAlign=\"center\">\n                <Checkbox\n                  label=\"I confirm to have my identity card ready\"\n                  required\n                  checked={this.state.checked1}\n                  onClick={() =>\n                    this.setState({ checked1: !this.state.checked1 })\n                  }\n                />\n                {this.state.checked1 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I agree that the audio line is beeing recorded\"\n                  required\n                  checked={this.state.checked2}\n                  onClick={() =>\n                    this.setState({ checked2: !this.state.checked2 })\n                  }\n                />\n                {this.state.checked2 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I confirm that I have a good internet connection\"\n                  required\n                  checked={this.state.checked3}\n                  onClick={() =>\n                    this.setState({ checked3: !this.state.checked3 })\n                  }\n                />\n                {this.state.checked3 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I confirm that I am in a silent environment\"\n                  required\n                  checked={this.state.checked4}\n                  onClick={() =>\n                    this.setState({ checked4: !this.state.checked4 })\n                  }\n                />\n                {this.state.checked4 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I confirm that I have a good microphone (preferably headset)\"\n                  required\n                  checked={this.state.checked5}\n                  onClick={() =>\n                    this.setState({ checked5: !this.state.checked5 })\n                  }\n                />\n                {this.state.checked5 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                <Checkbox\n                  label=\"I agree to pay a fee for the video identification\"\n                  required\n                  checked={this.state.checked6}\n                  onClick={() =>\n                    this.setState({ checked6: !this.state.checked6 })\n                  }\n                />\n                {this.state.checked6 ? (\n                  <Icon\n                    name=\"check circle\"\n                    color=\"green\"\n                    size=\"large\"\n                    style={{ float: \"right\" }}\n                  />\n                ) : null}\n                <Divider />\n                {this.state.checked1 &&\n                this.state.checked2 &&\n                this.state.checked3 &&\n                this.state.checked4 &&\n                this.state.checked5 &&\n                this.state.checked6 ? (\n                  <Container style={{ display: \"inline-block\" }}>\n                    <Button\n                      icon\n                      labelPosition=\"left\"\n                      floated=\"left\"\n                      onClick={() =>\n                        this.setState({ terms: false, pay: false })\n                      }\n                    >\n                      <Icon name=\"left arrow\" />\n                      Back\n                    </Button>\n                    <Button\n                      primary\n                      labelPosition=\"right\"\n                      floated=\"right\"\n                      icon\n                      onClick={() => this.setState({ pay: true })}\n                    >\n                      Next <Icon name=\"right arrow\" />\n                    </Button>\n                  </Container>\n                ) : (\n                  <Container style={{ display: \"inline-block\" }}>\n                    <Button\n                      icon\n                      labelPosition=\"left\"\n                      floated=\"left\"\n                      onClick={() =>\n                        this.setState({ terms: false, pay: false })\n                      }\n                      style={{ display: \"inline-block\" }}\n                    >\n                      <Icon name=\"left arrow\" />\n                      Back\n                    </Button>\n                    <Button\n                      primary\n                      labelPosition=\"right\"\n                      floated=\"right\"\n                      icon\n                      disabled\n                      onClick={() => this.setState({ pay: true })}\n                    >\n                      Next <Icon name=\"right arrow\" />\n                    </Button>\n                  </Container>\n                )}\n              </Container>\n            </Segment>\n          ) : this.state.terms == true && this.state.pay == true ? (\n            <div>\n              <Segment\n                style={{\n                  // maxWidth: \"450px\",\n                  // margin: \"auto\",\n                  marginTop: \"50px\"\n                }}\n              >\n                <Header\n                  as=\"h1\"\n                  textAlign=\"center\"\n                  style={{ marginTop: \"10px\", color: \"#2985d0\" }}\n                >\n                  Payment\n                </Header>\n                <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n                  Please enter a value you are willing to pay\n                </Header>\n                {this.state.metaMask == false ? (\n                  <Message error content=\"Please login to Metamask\" />\n                ) : null}\n                {this.state.waiting == true ? (\n                  <Message\n                    warning\n                    content=\"Waiting on transaction success...\"\n                  />\n                ) : null}\n                <Form onSubmit={this.submit} error={this.state.error}>\n                  <Form.Field>\n                    {/* <label> Username </label> */}\n                    <Form.Input\n                      icon=\"ethereum\"\n                      iconPosition=\"left\"\n                      placeholder=\"Ether\"\n                      id=\"value\"\n                      type=\"number\"\n                      min=\"0\"\n                      step=\"0.0001\"\n                      value={this.state.value}\n                      onChange={event =>\n                        this.setState({ value: event.target.value })\n                      }\n                    />\n                  </Form.Field>\n                  {/* {this.state.error ?  */}\n                  <Message\n                    error\n                    header=\"Oops!\"\n                    content=\"Please enter a value\"\n                  />\n                  <Button\n                    fluid\n                    icon\n                    size=\"large\"\n                    color=\"blue\"\n                    loading={this.state.loading}\n                  >\n                    <Icon name=\"check circle outline\" size=\"large\" />\n                  </Button>\n                </Form>\n                <Button\n                  style={{ backgroundColor: \"white\" }}\n                  fluid\n                  onClick={() => this.setState({ terms: true, pay: false })}\n                >\n                  {\" \"}\n                  <Icon name=\"arrow left\" /> back\n                </Button>\n              </Segment>\n            </div>\n          ) : null}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Assets;\n","const routes = require(\"next-routes\")();\n\nmodule.exports = routes;\n//add dynamic route \nroutes.add(\"passwordchange\", \"/passwordchange/:id\", \"passwordchange\");\n","//set cookie function\nexport function setCookie(cname, cvalue, exdays) {\n  let d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname + \"=\" + cvalue + \";\" + expires + \"HttpOnly;\" + \";path=/\";\n}\n\n//get cookie function\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"sweetalert2\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAFA;AAAA;AAAA;AAgBA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AARA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAQA;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAvCA;AA0CA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA/CA;AAAA;AAAA;AAAA;AAAA;AAiDA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAAA;AACA;AADA;AAoDA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlDA;AAAA;AAAA;AAAA;AAAA;AA+GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAQA;AACA;AAFA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAXA;AAAA;AACA;AADA;AA2BA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAJA;AAgBA;AACA;AAhDA;AAgDA;AAAA;AAAA;AAAA;AACA;AAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAFA;AAmBA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA;AACA;;;AAiIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAgBA;AACA;AAAA;AAAA;AAFA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AARA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AATA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AARA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAeA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAcA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAcA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAeA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AAPA;AAcA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AADA;AADA;AANA;AAcA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAMA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AASA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAcA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAJA;AAQA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAPA;AASA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AASA;AACA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AAFA;AAKA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AATA;AAgBA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAQA;;;;AAv2BA;AACA;AAy2BA;;;;;;;;;;;ACn4BA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}