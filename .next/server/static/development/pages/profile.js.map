{"version":3,"file":"static/development/pages/profile.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Layout.js","webpack:///./components/ProfileHeader.js","webpack:///./components/UserData.js","webpack:///./components/UserList.js","webpack:///./components/VideoChat.js","webpack:///./pages/profile.js","webpack:///./routes.js","webpack:///./utils/CookieUtils.js","webpack:///./utils/UserUtils.js","webpack:///./webrtc/MediaHandler.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"jwt-decode\"","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"pusher-js\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"simple-peer\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"sweetalert2\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nexport default props => {\n  return (\n    <Container style={{ width: 650, border: 1 }}>\n      <Head>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\n        />\n      </Head>\n      <style jsx global>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n\n      {props.children}\n    </Container>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Menu, Icon, Container, Header, Segment } from \"semantic-ui-react\";\nimport { setCookie } from \"../utils/CookieUtils\";\nimport { Router, Link } from \"../routes\";\nimport axios from \"axios\";\nimport Layout from \"./Layout\";\nimport UserList from \"./UserList\";\nimport VideoChat from \"./VideoChat\";\n\nexport default class ProfileHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: false,\n      currentUser: \"\",\n      activeItem: \"videochat\"\n    };\n    this.logout = e => this._logout();\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/currentuser\"\n      );\n      if (response.data.success) {\n        this.setState({ currentUser: response.data.currentUser });\n        if (response.data.currentUser === \"Admin\") {\n          this.setState(activeItem === \"home\");\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  _logout() {\n    setCookie(\"x-access-token\", \"\", -60 * 60);\n    Router.pushRoute(\"/login\");\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  render() {\n    const { activeItem } = this.state;\n    return (\n      <div>\n        <Menu pointing>\n          <Menu.Item name=\"home\">\n            <Icon name=\"home\" size=\"small\" />\n          </Menu.Item>\n          {this.state.currentUser === \"Admin\" ? (\n            <Menu.Menu>\n              <Menu.Item\n                color=\"blue\"\n                name=\"home\"\n                active={activeItem === \"home\"}\n                onClick={this.handleItemClick}\n              />\n              <Menu.Item\n                name=\"userlist\"\n                active={activeItem === \"userlist\"}\n                onClick={this.handleItemClick}\n                color=\"blue\"\n              />\n              <Menu.Item\n                name=\"videochat\"\n                // href=\"/videochat\"\n                active={activeItem === \"videochat\"}\n                onClick={this.handleItemClick}\n                color=\"blue\"\n              />\n            </Menu.Menu>\n          ) : null}\n          <Menu.Menu position=\"right\">\n            <Menu.Item name=\"logout\" onClick={this.logout} />\n            <Menu.Item>\n              <Icon name=\"user\" size=\"small\" />\n              <p>{this.state.currentUser}</p>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n        <Layout>\n          <style jsx global>{`\n            body {\n              background: #e6e6e6;\n            }\n          `}</style>\n          {this.state.currentUser === \"Admin\" ? (\n            <div>\n              {this.state.activeItem === \"userlist\" ? <UserList /> : null}\n              {this.state.activeItem === \"videochat\" ? (\n                <div>\n                  <VideoChat />\n                  {/* <UserApproval /> */}\n                </div>\n              ) : null}\n              {/* {this.state.activeItem === \"home\" ? (\n                <Segment\n                  style={{\n                    marginTop: \"50px\",\n                    marginLeft: \"-126px\",\n                    width: \"900px\"\n                  }}\n                >\n                  <Header\n                    as=\"h1\"\n                    style={{\n                      textAlign: \"center\",\n                      marginTop: \"10px\",\n                      color: \"#2985d0\",\n                      marginBottom: \"10px\"\n                    }}\n                  >\n                    Welcome to the Admin Page\n                  </Header>\n                </Segment>\n              ) : null} */}\n            </div>\n          ) : null}\n        </Layout>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Icon,\n  Container,\n  Table,\n  Header,\n  Grid,\n  Segment\n} from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\n\nexport default class UserData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      isComp: \"\",\n      fileURL: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.post(window.location.origin + \"/users\");\n      if (response.data.success) {\n        this.setState({\n          users: response.data.userData,\n          img1: response.data.pic1,\n          img2: response.data.pic2,\n          doc1: response.data.doc1,\n          doc2: response.data.doc2,\n          isComp: response.data.isComp\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //TODO: Create UserProfile component with default template\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Segment style={{ marginTop: \"50px\" }}>\n            <Header\n              as=\"h1\"\n              style={{\n                textAlign: \"center\",\n                marginTop: \"10px\",\n                color: \"#2985d0\"\n              }}\n            >\n              Your Profile\n            </Header>\n            <Container style={{ marginTop: \"10px\" }}>\n              {this.state.users.map(member => (\n                <Header\n                  as=\"h3\"\n                  block\n                  style={{ backgroundColor: \"#d9edf7\" }}\n                  key={member.id}\n                >\n                  <Icon name=\"user\" size=\"big\" style={{ align: \"left\" }} />\n                  {member.lname}, {member.fname}\n                </Header>\n              ))}\n              <Table>\n                {this.state.users.map(member => (\n                  <Table.Body key={member.id}>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Username:\n                        </p>\n                        {member.username}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          ID:\n                        </p>\n                        {member.id}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Street:\n                        </p>\n                        {member.street}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          House Nr:\n                        </p>\n                        {member.houseNr}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Postal Code:\n                        </p>\n                        {member.postCode}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Residence:\n                        </p>\n                        {member.placeOfRes}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Birthday:\n                        </p>\n                        {member.dateOfBirth}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Nationality:\n                        </p>\n                        {member.nat}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Email:\n                        </p>\n                        {member.email}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Mobile Number:\n                        </p>\n                        {member.mobNr}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Role:\n                        </p>\n                        {member.privileges}\n                      </Table.Cell>\n                      <Table.Cell>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          is Registered:\n                        </p>\n                        {member.isRegistered}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell colSpan={2}>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Hash:\n                        </p>\n                        {member.hash}\n                      </Table.Cell>\n                    </Table.Row>\n                    <Table.Row>\n                      <Table.Cell colSpan={2}>\n                        <p\n                          style={{\n                            fontWeight: \"bold\",\n                            display: \"inline-block\",\n                            paddingRight: \"10px\"\n                          }}\n                        >\n                          Registration Date:\n                        </p>\n                        {member.regDate}\n                      </Table.Cell>\n                    </Table.Row>\n                  </Table.Body>\n                ))}\n              </Table>\n              <Grid>\n                <Grid.Column width={8}>\n                  <img\n                    className=\"img-responsive\"\n                    src={`../static/${this.state.img1}`}\n                    style={{ width: \"200px\", height: \"113px\", float: \"left\" }}\n                  />\n                </Grid.Column>\n                <Grid.Column width={8}>\n                  <img\n                    className=\"img-responsive\"\n                    src={`../static/${this.state.img2}`}\n                    style={{ width: \"200px\", height: \"113px\", float: \"right\" }}\n                  />\n                </Grid.Column>\n              </Grid>\n              {this.state.isComp === 1 ? (\n                <Table>\n                  {this.state.users.map(member => (\n                    <Table.Body key={member.id}>\n                      <Table.Row>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            Company Name:\n                          </p>\n                          {member.compName}\n                        </Table.Cell>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            Registration Number:\n                          </p>\n                          {member.regNr}\n                        </Table.Cell>\n                      </Table.Row>\n                      <Table.Row>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            Place of registration:\n                          </p>\n                          {member.placeOfReg}\n                        </Table.Cell>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            Residence:\n                          </p>\n                          {member.residence}\n                        </Table.Cell>\n                      </Table.Row>\n                      <Table.Row>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            Business Address:\n                          </p>\n                          {member.businessAd}\n                        </Table.Cell>\n                        <Table.Cell>\n                          <p\n                            style={{\n                              fontWeight: \"bold\",\n                              display: \"inline-block\",\n                              paddingRight: \"10px\"\n                            }}\n                          >\n                            House Nr:\n                          </p>\n                          {member.compHouseNr}\n                        </Table.Cell>\n                      </Table.Row>\n                      <Table.Row>\n                        <Table.Cell colSpan={2}>\n                          <a\n                            href={`../static/${this.state.doc1}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View excerpt of commercial register\n                          </a>\n                        </Table.Cell>\n                      </Table.Row>\n                      <Table.Row>\n                        <Table.Cell colSpan={2}>\n                          <a\n                            href={`../static/${this.state.doc2}`}\n                            type=\"application/pdf\"\n                            target=\"_blank\"\n                          >\n                            View Provisions regulating the power to bind the\n                            legal entity\n                          </a>\n                        </Table.Cell>\n                      </Table.Row>\n                    </Table.Body>\n                  ))}\n                </Table>\n              ) : null}\n            </Container>\n          </Segment>\n        </Layout>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Icon,\n  Container,\n  Table,\n  Header,\n  List,\n  Grid,\n  Button,\n  Segment\n} from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\n// import getCurrentUser from \"../utils/UserUtils\";\nimport axios from \"axios\";\n\nexport default class UserList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      usrs: [],\n      test: \"\",\n      isChosen: false,\n      isPromoted: false,\n      isComp: \"\"\n    };\n    //this.currentUser = getCurrentUser();\n    this.makeAdmin = e => this._makeAdmin();\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.post(window.location.origin + \"/userlist\");\n      if (response.data.success) {\n        this.setState({ users: response.data.userData });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async selectUser(member, e) {\n    let currentUser = member.username;\n    try {\n      const response = await axios.post(window.location.origin + \"/usrs\", {\n        currentUser\n      });\n      if (response.data.success) {\n        this.setState({\n          usrs: response.data.userData,\n          isComp: response.data.isComp,\n          img1: response.data.pic1,\n          img2: response.data.pic2,\n          doc1: response.data.doc1,\n          doc2: response.data.doc2\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.setState({ isChosen: true });\n  }\n\n  async _makeAdmin() {\n    let currentUser = this.state.usrs[0].username;\n    try {\n      const response = await axios.post(window.location.origin + \"/makeadmin\", {\n        currentUser\n      });\n      if (response.data.success) {\n        this.setState({ successMessage: response.data.message });\n        console.log(this.state.successMessage);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    this.setState({ isPromoted: true });\n  }\n\n  //TODO: Create UserProfile component with default template\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Segment\n            style={{ marginTop: \"50px\", marginLeft: \"-126px\", width: \"900px\" }}\n          >\n            <Header\n              as=\"h1\"\n              style={{\n                textAlign: \"center\",\n                marginTop: \"10px\",\n                color: \"#2985d0\"\n              }}\n            >\n              List of all Users\n            </Header>\n            <Container style={{ marginTop: \"10px\" }}>\n              <Grid>\n                <Grid.Column width={4} style={{ marginTop: \"12px\" }}>\n                  <List divided relaxed>\n                    {this.state.users.map(member => (\n                      <List.Item\n                        key={member.id}\n                        onClick={this.selectUser.bind(this, member)}\n                      >\n                        <Icon name=\"user\" size=\"large\" verticalAlign=\"middle\" />\n                        <List.Content>\n                          <List.Header as=\"a\">{member.username}</List.Header>\n                          <List.Description as=\"a\">\n                            {member.lname},{\" \"} {member.fname}\n                          </List.Description>\n                        </List.Content>\n                      </List.Item>\n                    ))}\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={12}>\n                  {this.state.isChosen ? (\n                    <div>\n                      <Layout>\n                        <Container style={{ marginTop: \"10px\" }}>\n                          <Header\n                            as=\"h3\"\n                            block\n                            style={{ backgroundColor: \"#d9edf7\" }}\n                          >\n                            <Icon\n                              name=\"user\"\n                              size=\"big\"\n                              style={{ align: \"left\" }}\n                            />\n                            {this.state.usrs[0].lname},{\" \"}\n                            {this.state.usrs[0].fname}\n                          </Header>\n                          <Table>\n                            <Table.Body>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Username:\n                                  </p>\n                                  {this.state.usrs[0].username}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    ID:\n                                  </p>\n                                  {this.state.usrs[0].id}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Street:\n                                  </p>\n                                  {this.state.usrs[0].street}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    House Nr:\n                                  </p>\n                                  {this.state.usrs[0].houseNr}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Postal Code:\n                                  </p>\n                                  {this.state.usrs[0].postCode}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Residence:\n                                  </p>\n                                  {this.state.usrs[0].placeOfRes}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Birthday:\n                                  </p>\n                                  {this.state.usrs[0].dateOfBirth}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Nationality:\n                                  </p>\n                                  {this.state.usrs[0].nat}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Email:\n                                  </p>\n                                  {this.state.usrs[0].email}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Mobile Nr:\n                                  </p>\n                                  {this.state.usrs[0].mobNr}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Role:\n                                  </p>\n                                  {this.state.usrs[0].privileges}\n                                </Table.Cell>\n                                <Table.Cell>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    is Registered:\n                                  </p>\n                                  {this.state.usrs[0].isRegistered}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell colSpan={2}>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Hash:\n                                  </p>\n                                  {this.state.usrs[0].hash}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell colSpan={2}>\n                                  <p\n                                    style={{\n                                      fontWeight: \"bold\",\n                                      display: \"inline-block\",\n                                      paddingRight: \"10px\"\n                                    }}\n                                  >\n                                    Registration Date:\n                                  </p>\n                                  {this.state.usrs[0].regDate}\n                                </Table.Cell>\n                              </Table.Row>\n                              <Table.Row>\n                                <Table.Cell colSpan={2}>\n                                  {this.state.usrs[0].privileges == \"user\" &&\n                                  this.state.usrs[0].isRegistered == \"yes\" ? (\n                                    <Button\n                                      primary\n                                      onClick={this.makeAdmin}\n                                      fluid\n                                    >\n                                      Make Admin\n                                    </Button>\n                                  ) : (\n                                    <Button primary disabled fluid>\n                                      Make Admin\n                                    </Button>\n                                  )}\n                                </Table.Cell>\n                              </Table.Row>\n                            </Table.Body>\n                          </Table>\n                          <Grid>\n                            <Grid.Column width={8}>\n                              <img\n                                className=\"img-responsive\"\n                                src={`../static/${this.state.img1}`}\n                                style={{\n                                  width: \"200px\",\n                                  height: \"113px\",\n                                  float: \"left\"\n                                }}\n                              />\n                            </Grid.Column>\n                            <Grid.Column width={8}>\n                              <img\n                                className=\"img-responsive\"\n                                src={`../static/${this.state.img2}`}\n                                style={{\n                                  width: \"200px\",\n                                  height: \"113px\",\n                                  float: \"right\"\n                                }}\n                              />\n                            </Grid.Column>\n                          </Grid>\n\n                          {this.state.isComp === 1 ? (\n                            <Table>\n                              <Table.Body>\n                                <Table.Row>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      Company Name:\n                                    </p>\n                                    {this.state.usrs[0].compName}\n                                  </Table.Cell>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      Registration Number:\n                                    </p>\n                                    {this.state.usrs[0].regNr}\n                                  </Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      Place of Registration:\n                                    </p>\n                                    {this.state.usrs[0].placeOfReg}\n                                  </Table.Cell>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      Residence:\n                                    </p>\n                                    {this.state.usrs[0].residence}\n                                  </Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      Business Address:\n                                    </p>\n                                    {this.state.usrs[0].businessAd}\n                                  </Table.Cell>\n                                  <Table.Cell>\n                                    <p\n                                      style={{\n                                        fontWeight: \"bold\",\n                                        display: \"inline-block\",\n                                        paddingRight: \"10px\"\n                                      }}\n                                    >\n                                      House Nr:\n                                    </p>\n                                    {this.state.usrs[0].compHouseNr}\n                                  </Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                  <Table.Cell colSpan={2}>\n                                    <a\n                                      href={`../static/${this.state.doc1}`}\n                                      type=\"application/pdf\"\n                                      target=\"_blank\"\n                                    >\n                                      View excerpt of commercial register\n                                    </a>\n                                  </Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                  <Table.Cell colSpan={2}>\n                                    <a\n                                      href={`../static/${this.state.doc2}`}\n                                      type=\"application/pdf\"\n                                      target=\"_blank\"\n                                    >\n                                      View provisions regulating the power to\n                                      bind the legal entity\n                                    </a>\n                                  </Table.Cell>\n                                </Table.Row>\n                              </Table.Body>\n                            </Table>\n                          ) : null}\n                        </Container>\n                      </Layout>\n                    </div>\n                  ) : null}\n                </Grid.Column>\n              </Grid>\n            </Container>\n          </Segment>\n        </Layout>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProfileHeader from \"../components/ProfileHeader\";\nimport Layout from \"../components/Layout\";\nimport MediaHandler from \"../webrtc/MediaHandler\";\nimport Pusher from \"pusher-js\";\nimport Peer from \"simple-peer\";\nconst APP_KEY = \"0f924dcd44dc93a88aa7\"; //Pusher Key\nimport {\n  Header,\n  Message,\n  Segment,\n  Button,\n  Icon,\n  Form\n} from \"semantic-ui-react\";\nimport { getCookie } from \"../utils/CookieUtils\";\nimport jwtDecode from \"jwt-decode\";\nimport getCurrentUser from \"../utils/UserUtils\";\nimport axios from \"axios\";\nimport { Router } from \"../routes\";\nimport swal from \"sweetalert2\";\n\nlet xsrfToken = \"\";\nlet pusher;\nlet channelName;\n\nexport default class VideoChat extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasMedia: false,\n      userName: \"\",\n      otherUserId: null,\n      connectedTo: \"\",\n      role: \"\",\n      isNotCalled: \"true\",\n      hash: \"\",\n      message: \"\",\n      waitingMessage: \"\",\n      loading: false,\n      countMembers: \"\"\n    };\n\n    this.currentUser = {\n      id: \"\",\n      stream: undefined\n    };\n\n    this.peers = [];\n\n    this.mediaHandler = new MediaHandler();\n    // this.setupPusher();\n\n    this.callTo = this.callTo.bind(this);\n    this.setupPusher = this.setupPusher.bind(this);\n    this.startPeer = this.startPeer.bind(this);\n    this.endCall = this.endCall.bind(this);\n  }\n\n  async componentWillMount() {\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/videochat/stream\",\n        { timeout: 60 * 4 * 1000 }\n      );\n      this.setState({\n        userName: response.data.currentUser,\n        role: response.data.role\n      });\n      this.currentUser.id = this.state.userName;\n      xsrfToken = response.data.token;\n    } catch (e) {\n      console.log(e);\n    }\n\n    // this.currentUser.id = getCurrentUser();\n\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({ hasMedia: true });\n      this.currentUser.stream = stream;\n      try {\n        let myVideo = document.getElementById(\"my-video\");\n        myVideo.srcObject = stream;\n        const playPromise = myVideo.play();\n\n        if (playPromise !== null) {\n          playPromise\n            .then(() => {\n              return myVideo.play();\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      } catch (e) {\n        console.log(e.stack);\n      }\n    });\n\n    this.setupPusher();\n    return;\n  }\n\n  setupPusher() {\n    //Pusher.logToConsole = true;\n    pusher = new Pusher(APP_KEY, {\n      authEndpoint: \"/pusher/auth\",\n      cluster: \"eu\",\n      auth: {\n        params: this.currentUser.id,\n        headers: {\n          \"X-XSRF-Token\": xsrfToken\n        }\n      }\n    });\n\n    channelName = pusher.subscribe(\"presence-video-channel\"); //requires auth\n\n    channelName.bind(\"pusher:subscription_succeeded\", members => {\n      let countMembers = members.count;\n      console.log(countMembers);\n    });\n\n    channelName.bind(\"pusher:member_added\", member => {\n      this.setState({ connectedTo: member.id });\n      swal(\"You are conneted to\", `${member.id}`, \"success\");\n      let newConnect = member.id;\n      // swal(\"Attention\", \"Admin is occupied, please wait...\", \"warning\");\n      axios.post(window.location.origin + \"/pusher/count\", {\n        newConnect\n      });\n    });\n\n    channelName.bind(\"pusher:member_removed\", member => {\n      swal(\"Removed member\", `${member.id}`, \"success\");\n    });\n\n    channelName.bind(`client-signal-${this.currentUser.id}`, signal => {\n      let peer = this.peers[signal.userId];\n      // if peer does not already exist, we got an incoming call\n      if (peer === undefined) {\n        this.setState({ otherUserId: signal.userId });\n        peer = this.startPeer(signal.userId, false);\n\n        //callee //if offer is sent, stop!\n      }\n      peer.signal(signal.data);\n    });\n  }\n\n  startPeer(userId, initiator = true) {\n    //caller\n    //TODO: initiator is always user!\n    const peer = new Peer({\n      initiator,\n      stream: this.currentUser.stream,\n      trickle: false\n    });\n\n    peer.on(\"signal\", data => {\n      //initiator\n      channelName.trigger(`client-signal-${userId}`, {\n        type: \"signal\",\n        userId: this.currentUser.id, //send event to callee from caller, caller receives event\n        data: data,\n        renegotiate: false\n      });\n    });\n\n    peer.on(\"stream\", stream => {\n      try {\n        let userVideo = document.getElementById(\"user-video\");\n        userVideo.srcObject = stream;\n        const playPromise = userVideo.play();\n\n        if (playPromise !== null) {\n          playPromise\n            .then(() => {\n              return userVideo.play();\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      } catch (e) {\n        console.log(e.stack);\n      }\n    });\n    return peer;\n  }\n\n  callTo(userId) {\n    // console.log(`starting Pusher: ${userId}`);\n    this.setState({ isNotCalled: false });\n    //TODO: show encall button only when in call?\n    this.peers[userId] = this.startPeer(userId);\n  }\n\n  endCall() {\n    window.location.href = \"/login\";\n    Router.push(\"/login\");\n  }\n\n  reloadAfterCall() {\n    window.location.href = \"/admin\";\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          <Segment\n            style={{ marginTop: \"50px\", marginLeft: \"-126px\", width: \"900px\" }}\n          >\n            <Header\n              as=\"h1\"\n              textAlign=\"center\"\n              style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n            >\n              Video Chat\n            </Header>\n            {/* TODO: <UserApproval /> if role == 1 */}\n            <br />\n            <div\n              className=\"video-container\"\n              style={{\n                width: \"100%\",\n                height: \"380px\",\n                margin: \"0px auto\",\n                position: \"relative\",\n                border: \"3px solid #000\"\n              }}\n            >\n              {[\"Admin\"].map(userId => {\n                return this.currentUser.id !== userId &&\n                  this.state.isNotCalled ? (\n                  <Button\n                    icon\n                    key={userId}\n                    onClick={() => this.callTo(userId)}\n                    style={{\n                      backgroundColor: \"#2985d0\",\n                      color: \"white\",\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      transform: \"translate(-50%, -50%)\",\n                      zIndex: \"3\",\n                      margin: \"auto\"\n                    }}\n                  >\n                    Call {userId}\n                    <Icon name=\"phone\" />\n                  </Button>\n                ) : null;\n              })}\n              <video\n                className=\"my-video\"\n                id=\"my-video\"\n                // ref={ref => {\n                //   this.myVideo = ref;\n                // }}\n                style={{\n                  width: \"130px\",\n                  position: \"absolute\",\n                  left: \"10px\",\n                  bottom: \"10px\",\n                  border: \"3px solid #0061ff\",\n                  zIndex: \"2\"\n                }}\n              />\n              <video\n                className=\"user-video\"\n                id=\"user-video\"\n                // ref={ref => {\n                //   this.userVideo = ref;\n                // }}\n                style={{\n                  // position: \"absolute\",\n                  margin: \"auto\",\n                  // left: \"0\",\n                  // right: \"0\",\n                  // bottom: \"0\",\n                  // top: \"0\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  zIndex: \"1\"\n                }}\n              />\n              {/*TODO: Who are you connected with?*/}\n            </div>\n            <br />\n            {this.state.role == 1 ? (\n              <Button\n                onClick={this.reloadAfterCall}\n                fluid\n                style={{ color: \"white\", backgroundColor: \"#ff3344\" }}\n              >\n                end call\n              </Button>\n            ) : (\n              <Button\n                onClick={this.endCall}\n                fluid\n                style={{ color: \"white\", backgroundColor: \"#ff3344\" }}\n              >\n                end call\n              </Button>\n            )}\n            {this.state.role == 1 ? (\n              <Message\n                success\n                header=\"You are connected to\"\n                content={this.state.connectedTo}\n              />\n            ) : null}\n          </Segment>\n        </Layout>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport { Button, Container } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport { getCookie } from \"../utils/CookieUtils\";\nimport ProfileHeader from \"../components/ProfileHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport UserData from \"../components/UserData\";\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"\"\n    };\n    // this.testCSRF = e => this._testCSRF();\n  }\n\n  // async _testCSRF() {\n  //   const token = getCookie(\"x-access-token\");\n  //   const decoded = jwtDecode(token);\n  //   try {\n  //     const res = await axios.post(\n  //       window.location.origin + \"/api/preventCRSF\",\n  //       {\n  //         example: \"data\"\n  //       },\n  //       {\n  //         headers: {\n  //           \"X-XSRF-TOKEN\": decoded.xsrfToken\n  //         }\n  //       }\n  //     );\n  //     if (res.data.success) {\n  //       this.setState({\n  //         message: res.data.message\n  //       });\n  //     }\n  //   } catch (error) {\n  //     this.setState({\n  //       message: error.response.data.message\n  //     });\n  //   }\n  // } //!Only for test purposes\n\n  render() {\n    return (\n      <div>\n        <ProfileHeader />\n        <UserData />\n        <Layout>\n          <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          {/* <br />\n          <br />\n          <Container textAlign=\"center\">\n            <Button onClick={this.testCSRF}>\n              Access API protected by CSFR\n            </Button>\n            <span>{this.state.message}</span>\n          </Container> */}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","const routes = require(\"next-routes\")();\n\nmodule.exports = routes;\n","export function setCookie(cname, cvalue, exdays) {\n  let d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie =\n    cname + \"=\" + cvalue + \";\" + expires + \"HttpOnly;\" + \";path=/\";\n}\n\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let ca = document.cookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n","import jwtDecode from \"jwt-decode\";\nimport { getCookie } from \"./CookieUtils\";\n\nexport default function getCurrentUser(currentUser) {\n  const token = getCookie(\"x-access-token\");\n  const decoded = jwtDecode(token);\n  currentUser = decoded.username;\n\n  return currentUser;\n}\n","export default class MediaHandler {\n  getPermissions() {\n    return new Promise((resolve, rej) => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true, audio: false }) //TODO: change to true\n        .then(stream => {\n          resolve(stream);\n        })\n        .catch(err => {\n          throw new Error(`Unable to fetch stream ${err}`);\n        });\n    });\n  }\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"pusher-js\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"simple-peer\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"sweetalert2\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAFA;AAAA;AAAA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA+BA;AAAA;AAAA;AAAA;AAAA;AACA;AA9BA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AACA;AARA;AAQA;AACA;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;;;AAIA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AADA;AAGA;AACA;AACA;AALA;AASA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAOA;AAAA;AAGA;AAAA;AA+BA;;;;AAlHA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAQA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;AAGA;AACA;;;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAUA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AA9KA;AA8LA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AAHA;AAUA;AAAA;AAEA;AACA;AACA;AAHA;AA7FA;AAgHA;;;;AAxXA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAUA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AAAA;AACA;AAZA;AAYA;AACA;;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;;;;;;AACA;;;AAEA;AACA;AADA;AACA;;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;;;;;AACA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;;AAEA;AACA;AADA;AACA;;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AACA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;AAEA;AACA;;;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AARA;AAgBA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AAHA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAIA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAHA;AAkBA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAeA;AACA;AACA;AACA;AAHA;AADA;AAaA;AACA;AACA;AACA;AAHA;AADA;AAaA;AAAA;AAEA;AACA;AACA;AAHA;AAUA;AAAA;AAEA;AACA;AACA;AAHA;AAwBA;;;;AArdA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AA9BA;AA+BA;AACA;;;;;;;;;;;;;;;;AAGA;AAEA;AAAA;AACA;;AAHA;AAIA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;AAEA;AACA;;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAWA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAJA;AAgBA;AAAA;AAGA;AAEA;AACA;AAEA;AACA;AALA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AAgBA;AACA;AAEA;AACA;AALA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AANA;AAuBA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AAHA;AAUA;;;;AA5SA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AAqBA;;;;AA1DA;AACA;AA4DA;;;;;;;;;;;ACxEA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACTA;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}