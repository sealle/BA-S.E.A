{"version":3,"file":"0.js","sources":["webpack:///./components/PersonRegister.js","webpack:///./routes.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport { Form, Button, Icon, Popup, Message } from \"semantic-ui-react\";\nimport Layout from \"./Layout\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\n\n//options for dropdown menu\nconst idTypeOptions = [\n  {\n    key: \"Swiss Identity Card\",\n    text: \"Swiss Identity Card\",\n    value: \"id\"\n  },\n  { key: \"Swiss Drivers License\", text: \"Swiss Drivers License\", value: \"dl\" }\n];\n\nclass PersonRegister extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false,\n      file1: \"\",\n      file2: \"\",\n      files: [],\n      prev1: \"\",\n      prev2: \"\",\n      showResults: false\n    };\n  }\n\n  //handle form submit and send data to server\n  handleSubmit = async () => {\n    this.setState({ loading: true });\n\n    const formData = new FormData();\n    formData.append(\"file1\", this.state.file1);\n    formData.append(\"file2\", this.state.file2);\n    formData.append(\"fname\", this.state.fname);\n    formData.append(\"lname\", this.state.lname);\n    formData.append(\"street\", this.state.street);\n    formData.append(\"houseNr\", this.state.houseNr);\n    formData.append(\"postCode\", this.state.postCode);\n    formData.append(\"placeOfRes\", this.state.placeOfRes);\n    formData.append(\"dateOfBirth\", this.state.dateOfBirth);\n    formData.append(\"nat\", this.state.nat);\n    formData.append(\"email\", this.state.email);\n    formData.append(\"mobNr\", this.state.mobNr);\n    formData.append(\"username\", this.state.username);\n    formData.append(\"password\", this.state.password);\n    formData.append(\"idNum\", this.state.idNum);\n    formData.append(\"idType\", this.state.idType);\n    formData.append(\"errorMessage\", this.state.errorMessage);\n\n    console.log(this.state.idType);\n\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/register\",\n        formData\n      );\n      if (response.data.success) {\n        //success notification with possibility to resend the confirmation email\n        swal({\n          title: \"Success!\",\n          text:\n            \"An email has been sent to you. Please confirm your email address and login to proceed\",\n          type: \"success\",\n          showCancelButton: true,\n          confirmButtonText: \"Confirm\",\n          cancelButtonText: \"Resend Email\",\n          reverseButtons: true\n        }).then(result => {\n          if (result.value) {\n            Router.push(\"/login\");\n          } else {\n            this.resendEmail();\n          }\n        });\n      }\n    } catch (error) {\n      this.setState({ errorMessage: error.response.data.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  //resend confirmation email function\n  resendEmail = async () => {\n    console.log(this.state.email, this.state.username);\n    let email = this.state.email;\n    let username = this.state.username;\n    let response = await axios.post(\n      window.location.origin + \"/resendConfirmEmail\",\n      {\n        username,\n        email\n      }\n    );\n    if (response.data.success) {\n      swal({\n        title: \"Success!\",\n        text:\n          \"An email has been sent to you. Please confirm your email address and login to proceed\",\n        type: \"success\",\n        showCancelButton: true,\n        confirmButtonText: \"Confirm\",\n        cancelButtonText: \"Resend Email\",\n        reverseButtons: true\n      }).then(result => {\n        if (result.value) {\n          Router.push(\"/login\");\n        } else {\n          this.resendEmail();\n        }\n      });\n    }\n  };\n\n  //handle file input\n  handleFileChange = e => {\n    //check if two images have been uplaoded\n    if (!e.target.files[0] || !e.target.files[1] || e.target.files[2]) {\n      this.setState({ errorMessage: \"You have to upload 2 images!\" });\n    } else {\n      this.setState({\n        file1: e.target.files[0],\n        file2: e.target.files[1],\n        //image preview\n        prev1: URL.createObjectURL(e.target.files[0]),\n        prev2: URL.createObjectURL(e.target.files[1]),\n        showResults: true,\n        errorMessage: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <br />\n          {/* Form to handle inputs */}\n          <Form onSubmit={this.handleSubmit} error={this.state.errorMessage}>\n            <Form.Group>\n              <Form.Input\n                width=\"eight\"\n                fluid\n                label=\"Username\"\n                placeholder=\"Username\"\n                required\n                name=\"username\"\n                value={this.state.username}\n                onChange={event =>\n                  this.setState({ username: event.target.value })\n                }\n              />\n              <Form.Input\n                width=\"eight\"\n                fluid\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Password\"\n                required\n                name=\"password\"\n                value={this.state.password}\n                //strong password required\n                pattern=\"^(?=.*?[A-Z])(?=(.*[a-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W]){1,})(?!.*\\s).{8,}$\"\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n              <Popup\n                trigger={\n                  <Icon\n                    name=\"question circle outline\"\n                    style={{ marginRight: \"-16px\" }}\n                  />\n                }\n                content=\"The password must contain at least 1 upper case letter, 1 lower case letter, 1 digit, 1 special character and minimum eight in length!\"\n                hideOnScroll\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"First Name\"\n                placeholder=\"First Name\"\n                required\n                name=\"fname\"\n                value={this.state.fname}\n                onChange={event => this.setState({ fname: event.target.value })}\n              />\n              <Form.Input\n                fluid\n                label=\"Last Name\"\n                placeholder=\"Last Name\"\n                required\n                name=\"lname\"\n                value={this.state.lname}\n                onChange={event => this.setState({ lname: event.target.value })}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width=\"eleven\"\n                fluid\n                label=\"Street\"\n                placeholder=\"Street\"\n                required\n                name=\"street\"\n                value={this.state.street}\n                onChange={event =>\n                  this.setState({ street: event.target.value })\n                }\n              />\n              <Form.Input\n                width=\"five\"\n                fluid\n                label=\"House Number\"\n                required\n                placeholder=\"House Number\"\n                name=\"houseNr\"\n                value={this.state.houseNr}\n                onChange={event =>\n                  this.setState({ houseNr: event.target.value })\n                }\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width=\"six\"\n                fluid\n                type=\"number\"\n                label=\"Postal Code\"\n                required\n                placeholder=\"Postal Code\"\n                name=\"postCode\"\n                value={this.state.postCode}\n                onChange={event =>\n                  this.setState({ postCode: event.target.value })\n                }\n              />\n              <Form.Input\n                width=\"ten\"\n                fluid\n                label=\"Place of Residenz\"\n                required\n                placeholder=\"Place of Residence\"\n                name=\"placeOfRes\"\n                value={this.state.placeOfRes}\n                onChange={event =>\n                  this.setState({ placeOfRes: event.target.value })\n                }\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Date of Birth\"\n                required\n                placeholder=\"DD.MM.YYYY\"\n                name=\"dateOfBirth\"\n                value={this.state.dateOfBirth}\n                onChange={event =>\n                  this.setState({ dateOfBirth: event.target.value })\n                }\n              />\n              <Form.Input\n                fluid\n                label=\"Nationality\"\n                required\n                placeholder=\"e.g. Switzerland\"\n                name=\"nat\"\n                value={this.state.nat}\n                onChange={event => this.setState({ nat: event.target.value })}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Email\"\n                type=\"email\"\n                required\n                placeholder=\"email@email.com\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={event => this.setState({ email: event.target.value })}\n              />\n              <Form.Input\n                fluid\n                label=\"Mobile Number\"\n                type=\"number\"\n                required\n                placeholder=\"+4* ** *** ** **\"\n                name=\"mobNr\"\n                value={this.state.mobNr}\n                onChange={event => this.setState({ mobNr: event.target.value })}\n              />\n            </Form.Group>\n            <Popup\n              trigger={\n                <Icon\n                  name=\"question circle outline\"\n                />\n              }\n              content={\n                <div>\n                  <p style={{ fontWeight: \"bold\" }}>Identity card:</p>\n                  <p>upper right on the front</p>\n                  <p style={{ fontWeight: \"bold\" }}>Drivers license:</p>\n                  <p>number 5 on the front</p>\n                </div>\n              }\n              hideOnScroll\n            />\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"ID Number\"\n                required\n                name=\"idNum\"\n                placeholder=\"ID Number\"\n                value={this.state.idNum}\n                onChange={event => this.setState({ idNum: event.target.value })}\n              />\n              <Form.Select\n                fluid\n                label=\"ID Type\"\n                required\n                options={idTypeOptions}\n                name=\"idType\"\n                placeholder=\"Choose a ID Type\"\n                onChange={(event, { value }) => {\n                  this.setState({ idType: value });\n                }}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                fluid\n                type=\"file\"\n                width=\"sixteen\"\n                required\n                label=\"ID front- and backside! (.png or .jpg)\"\n                name=\"file\"\n                id=\"file\"\n                multiple\n                onChange={this.handleFileChange}\n              />\n            </Form.Group>\n            {this.state.showResults ? (\n              <div className=\"image-preview\" style={{ marginBottom: \"10px\" }}>\n                <img\n                  src={this.state.prev1}\n                  style={{\n                    width: \"200px\",\n                    height: \"113px\",\n                    float: \"left\",\n                    marginBottom: \"12px\"\n                  }}\n                />\n                <img\n                  src={this.state.prev2}\n                  style={{\n                    width: \"200px\",\n                    height: \"113px\",\n                    float: \"right\",\n                    marginBottom: \"12px\"\n                  }}\n                />\n              </div>\n            ) : null}\n            {this.state.showResults ? (\n              <Button\n                icon\n                loading={this.state.loading}\n                fluid\n                size=\"large\"\n                color=\"blue\"\n              >\n                Submit\n                <Icon name=\"signup\" />\n              </Button>\n            ) : (\n              <Button icon disabled fluid size=\"large\" color=\"blue\">\n                Submit\n                <Icon name=\"signup\" />\n              </Button>\n            )}\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          </Form>\n          <br />\n          <br />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default PersonRegister;\n","const routes = require(\"next-routes\")();\n\nmodule.exports = routes;\n//add dynamic route \nroutes.add(\"passwordchange\", \"/passwordchange/:id\", \"passwordchange\");\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAtBA;AAAA;AAAA;AACA;AADA;AAyBA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgDA;AAAA;AAAA;AACA;AAlDA;AAmDA;AAAA;AAAA;AACA;AApDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAuEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAIA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxEA;AAwGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AArHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAaA;AACA;AACA;;;AAyGA;AAAA;AACA;AAAA;AAKA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAXA;AAgBA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AARA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AARA;AAYA;AAEA;AADA;AAIA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAdA;AAgBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AATA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAaA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAOA;;;;AA7XA;AACA;AA+XA;;;;;;;;;;;ACjZA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}