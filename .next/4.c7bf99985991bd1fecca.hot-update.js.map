{"version":3,"file":"4.c7bf99985991bd1fecca.hot-update.js","sources":["webpack:///components/ProfileHeader.js","webpack:///pages/register.js","webpack:///routes.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Menu,\n  Segment,\n  Icon,\n  Button,\n  Form,\n  Container\n} from \"semantic-ui-react\";\nimport { setCookie } from \"../utils/CookieUtils\";\nimport { Router, Link } from \"../routes\";\nimport getCurrentUser from \"../utils/UserUtils\";\nimport { getCookie } from \"../utils/CookieUtils\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default class ProfileHeader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAdmin: false\n    };\n\n    this.logout = e => this._logout();\n    this.currentUser = getCurrentUser();\n  }\n\n  componentDidMount() {\n    const token = getCookie(\"x-access-token\");\n    const decoded = jwtDecode(token);\n    if (decoded.role[0] == \"admin\") {\n      this.setState({ isAdmin: true });\n    }\n  }\n\n  _logout() {\n    setCookie(\"x-access-token\", \"\", -60 * 60);\n    Router.pushRoute(\"/login\");\n  }\n\n  profileBack = e => {\n    Router.pushRoute(\"/profile\");\n  };\n\n  /*userProfile = e => {\n    Router.pushRoute(\"/userdata\");\n  };*/\n\n  adminPage = e => {\n    Router.pushRoute(\"/admin\");\n  };\n\n  render() {\n    return (\n      <div>\n        <Menu pointing>\n          <Menu.Item name=\"home\" onClick={this.profileBack}>\n            <Icon name=\"home\" size=\"small\" />\n          </Menu.Item>\n          {/*<Menu.Item name=\"view profile\" onClick={this.userProfile} />*/}\n          <Menu.Menu position=\"right\">\n            {/*}  {this.state.isAdmin ? (\n              <Menu.Item name=\"users\" onClick={this.adminPage} />\n            ) : null}*/}\n            {/*TODO: Add view users profiles button/page*/}\n            <Menu.Item name=\"logout\" onClick={this.logout} />\n            <Menu.Item>\n              <Icon name=\"user\" size=\"small\" />\n              <p>{this.currentUser}</p>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/ProfileHeader.js","import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport { Form, Button, Icon, Popup, Message } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport fetch from \"isomorphic-unfetch\";\nimport HomeHeader from \"../components/HomeHeader\";\nimport axios from \"axios\";\n\nconst parse = require(\"mrz\").parse;\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      fname: \"\",\n      lname: \"\",\n      street: \"\",\n      houseNr: \"\",\n      postCode: \"\",\n      placeOfRes: \"\",\n      dateOfBirth: \"\",\n      nat: \"\",\n      email: \"\",\n      mobNr: \"\",\n      errorMessage: \"\",\n      successMessage: \"\",\n      loading: false,\n      file1: \"\",\n      file2: \"\",\n      files: [],\n      prev1: \"\",\n      prev2: \"\",\n      showResults: false\n    };\n\n    this.handleSubmit = e => this._handleSubmit();\n  }\n\n  async _handleSubmit() {\n    this.setState({ loading: true });\n\n    const formData = new FormData();\n    formData.append(\"file1\", this.state.file1);\n    formData.append(\"file2\", this.state.file2);\n    formData.append(\"fname\", this.state.fname);\n    formData.append(\"lname\", this.state.lname);\n    formData.append(\"street\", this.state.street);\n    formData.append(\"houseNr\", this.state.houseNr);\n    formData.append(\"postCode\", this.state.postCode);\n    formData.append(\"placeOfRes\", this.state.placeOfRes);\n    formData.append(\"dateOfBirth\", this.state.dateOfBirth);\n    formData.append(\"nat\", this.state.nat);\n    formData.append(\"email\", this.state.email);\n    formData.append(\"mobNr\", this.state.mobNr);\n    formData.append(\"username\", this.state.username);\n    formData.append(\"password\", this.state.password);\n    formData.append(\"errorMessage\", this.state.errorMessage);\n\n    try {\n      const response = await axios.post(\n        window.location.origin + \"/register\",\n        formData\n      );\n      if (response.data.success) {\n        Router.push(\"/login\"); //TODO: add success popup\n      }\n    } catch (error) {\n      this.setState({ errorMessage: error.response.data.message }); //TODO: get errorMessage if only one or null pictures were uploaded! -> server\n    }\n    this.setState({ loading: false });\n  }\n\n  handleFileChange = e => {\n    this.setState({ file1: e.target.files[0] });\n    this.setState({ file2: e.target.files[1] });\n    this.setState({ prev1: URL.createObjectURL(e.target.files[0]) }); //image-preview\n    this.setState({ prev2: URL.createObjectURL(e.target.files[1]) }); //image-preview\n    this.setState({ showResults: true });\n  };\n\n  //check mrz code\n  isValid = () => {\n    let res = parse(this.state.mrz);\n    this.result = res;\n    if (res.valid === true) {\n      console.log(\"Your ID is valid\");\n    } else {\n      console.log(\"Your ID is not valid\");\n    }\n    console.log(this.result);\n  };\n\n  render() {\n    return (\n      <div>\n        <HomeHeader />\n        <Layout>\n          <Header as=\"h1\" textAlign=\"center\" style={{ marginTop: 60 }}>\n            Registration\n          </Header>\n          <br />\n          <Form onSubmit={this.handleSubmit} error={this.state.errorMessage}>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Username\"\n                placeholder=\"Username\"\n                required\n                name=\"username\"\n                value={this.state.username}\n                onChange={event =>\n                  this.setState({ username: event.target.value })\n                }\n              />\n              <Form.Input\n                fluid\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"Password\"\n                required\n                name=\"password\"\n                value={this.state.password}\n                onChange={event =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"First Name\"\n                placeholder=\"First Name\"\n                name=\"fname\"\n                value={this.state.fname}\n                onChange={event => this.setState({ fname: event.target.value })}\n              />\n              <Form.Input\n                fluid\n                label=\"Last Name\"\n                placeholder=\"Last Name\"\n                name=\"lname\"\n                value={this.state.lname}\n                onChange={event => this.setState({ lname: event.target.value })}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width=\"eleven\"\n                fluid\n                label=\"Street\"\n                placeholder=\"Street\"\n                name=\"street\"\n                value={this.state.street}\n                onChange={event =>\n                  this.setState({ street: event.target.value })\n                }\n              />\n              <Form.Input\n                width=\"five\"\n                type=\"number\"\n                fluid\n                label=\"House Number\"\n                placeholder=\"House Number\"\n                name=\"houseNr\"\n                value={this.state.houseNr}\n                onChange={event =>\n                  this.setState({ houseNr: event.target.value })\n                }\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                width=\"six\"\n                fluid\n                type=\"number\"\n                label=\"Postal Code\"\n                placeholder=\"Postal Code\"\n                name=\"postCode\"\n                value={this.state.postCode}\n                onChange={event =>\n                  this.setState({ postCode: event.target.value })\n                }\n              />\n              <Form.Input\n                width=\"ten\"\n                fluid\n                label=\"Place of Residenz\"\n                placeholder=\"Place of Residence\"\n                name=\"placeOfRes\"\n                value={this.state.placeOfRes}\n                onChange={event =>\n                  this.setState({ placeOfRes: event.target.value })\n                }\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Date of Birth\"\n                type=\"date\"\n                placeholder=\"YYYY-MM-DD\"\n                name=\"dateOfBirth\"\n                value={this.state.DateOfBirth}\n                onChange={event =>\n                  this.setState({ DateOfBirth: event.target.value })\n                }\n              />\n              <Form.Input\n                fluid\n                label=\"Nationality\"\n                placeholder=\"Switzerland\"\n                name=\"nat\"\n                value={this.state.nat}\n                onChange={event => this.setState({ nat: event.target.value })}\n              />\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Input\n                fluid\n                label=\"Email\"\n                type=\"email\"\n                placeholder=\"email@email.com\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={event => this.setState({ email: event.target.value })}\n              />\n              <Form.Input\n                fluid\n                label=\"Mobile Number\"\n                type=\"number\"\n                placeholder=\"079 246 1102\"\n                name=\"mobNr\"\n                value={this.state.mobNr}\n                onChange={event => this.setState({ mobNr: event.target.value })}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Input\n                fluid\n                type=\"file\"\n                width=\"sixteen\"\n                label=\"ID front- and backside! (.png or .jpg)\"\n                name=\"file\"\n                id=\"file\"\n                multiple\n                onChange={this.handleFileChange}\n              />\n            </Form.Group>\n            {this.state.showResults ? (\n              <div className=\"image-preview\">\n                <img\n                  src={this.state.prev1}\n                  style={{ width: \"200px\", height: \"113px\", float: \"left\" }}\n                />\n                <img\n                  src={this.state.prev2}\n                  style={{ width: \"200px\", height: \"113px\", float: \"right\" }}\n                />\n              </div>\n            ) : null}\n            {/*<Form.Group>\n                            <Form.TextArea\n                                value={this.state.mrz}\n                                onChange={event => this.setState({mrz: event.target.value})}\n                                name=\"mrz\"\n                                style={{marginLeft: 162.5}}\n                                width=\"eight\"\n                                rows=\"3\"\n                                cols=\"50\"\n                                label=\"Enter your MRZ Code here\"\n                                placeholder=\"IDCHEC7407926<1<<<<<<<<<<<<<<<\n                                         9406188M2407016CHE<<<<<<<<<<<4\n                                         ALLEMANN<<SEBASTIAN<EMMANUEL<<\"/>\n                        </Form.Group>\n                        <Icon name=\"attention\" size=\"big\" style={{marginLeft: 305}}></Icon>\n                        <p style={{marginLeft: 80, fontSize: 15}}>If you are registering on behalf of a company, please\n                            fill in these additional fields:</p>\n                        <Form.Group>\n                            <Form.Input width=\"ten\" fluid label=\"Company Name\" placeholder=\"Company Name\"/>\n                            <Form.Input width=\"eight\" fluid label=\"Registration Number\"\n                                        placeholder=\"Registration Number\"/>\n                        </Form.Group>\n                        <Form.Group widths=\"equal\">\n                            <Form.Input fluid label=\"Place of Registration\" placeholder=\"Place of Registration\"/>\n                            <Form.Input fluid label=\"Residence\" placeholder=\"Residence\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Input width=\"eleven\" fluid label=\"Business Address\" placeholder=\"Business Address\"/>\n                            <Form.Input width=\"five\" fluid label=\"House Number\" placeholder=\"House Number\"/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Input fluid type=\"file\" width=\"eight\" label=\"Excerpt of commercial register\"\n                                        name=\"comReg\"/>\n                            <Form.Input fluid type=\"file\" width=\"eight\"\n                                        label=\"Provisions regulating the power to bind the legal entity\"\n                                        name=\"legalEnt\"/>\n                        </Form.Group>*/}\n            {/* TODO: how to handle company registrations... neccessary?*/}\n            <Button\n              style={{ marginLeft: 280 }}\n              primary\n              loading={this.state.loading}\n            >\n              Submit\n            </Button>\n            <Message error header=\"Oops!\" content={this.state.errorMessage} />\n          </Form>\n          <br />\n          <br />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n\n\n\n// WEBPACK FOOTER //\n// pages/register.js","const routes = require('next-routes')();\n\nmodule.exports = routes;\n\n\n\n// WEBPACK FOOTER //\n// routes.js"],"mappings":"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","sourceRoot":""}