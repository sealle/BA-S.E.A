{"version":3,"file":"static/webpack/static/development/pages/passwordchange.js.1cf8e2fa78a555f14485.hot-update.js","sources":["webpack:///./pages/passwordchange.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport {\n  Button,\n  Checkbox,\n  Container,\n  Divider,\n  Icon,\n  Segment,\n  Form,\n  Message,\n  Header,\n  Popup\n} from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport jwtDecode from \"jwt-decode\";\n\nclass PwChange extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errorMessage: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      username: \"\"\n    };\n    this.confirmP = e => this._confirmP();\n  }\n\n  //decode token in link to receive username\n  componentDidMount() {\n    let token = window.location.pathname.split(\"/\");\n    let decoded = jwtDecode(token[2]);\n    this.setState({ username: decoded.username });\n  }\n\n  //send new password to server\n  async _confirmP() {\n    if (this.state.password == this.state.confirmPassword) {\n      const formData = new FormData();\n      formData.append(\"password\", this.state.password);\n      formData.append(\"username\", this.state.username);\n\n      this.setState({ loading: true });\n\n      try {\n        const res = await axios.post(\n          window.location.origin + \"/changepw\",\n          formData\n        );\n        if (res.data.success) {\n          swal(\n            \"Congratulations!\",\n            \"Your password has been changed!\",\n            \"success\"\n          );\n          Router.push(\"/login\");\n        } else {\n          this.setState({ errorMessage: res.data.message });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      this.setState({\n        errorMessage: \"Passwords are not the same!\"\n      });\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          <Segment\n            style={{ maxWidth: \"450px\", margin: \"auto\", marginTop: \"50px\" }}\n          >\n            <br />\n            <Header\n              as=\"h1\"\n              textAlign=\"center\"\n              style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n            >\n              Password Reset\n            </Header>\n            <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n              Please enter your username and select a new password and confirm\n              it\n            </Header>\n            <Form onSubmit={this.confirmP} error={this.state.errorMessage}>\n              <Form.Group>\n                <Form.Input\n                width=\"sixteen\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={event =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n                <Popup\n                trigger={\n                  <Icon\n                    name=\"question circle outline\"\n                    style={{ marginTop: \"-17px\" }}\n                  />\n                }\n                content=\"The password must contain at least 1 upper case letter, 1 lower case letter, 1 digit, 1 special character and minimum eight in length!\"\n                hideOnScroll\n              />\n              </Form.Group>\n              <Form.Field>\n                {/* <label>Password</label> */}\n                <Form.Input\n                width=\"fifteen\"\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  value={this.state.confirmPassword}\n                  onChange={event =>\n                    this.setState({ confirmPassword: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              <Button\n                fluid\n                icon\n                size=\"large\"\n                color=\"blue\"\n                loading={this.state.loading}\n              >\n                Confirm\n              </Button>\n            </Form>\n          </Segment>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default PwChange;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AACA;AATA;AASA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;AAGA;;;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;AAGA;AACA;;AADA;AACA;AAGA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA;;;;;;AAEA;AACA;AADA;AACA;;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AAEA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AARA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AARA;AAaA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAcA;;;;AAtIA;AACA;AAwIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}