{"version":3,"file":"static/webpack/static/development/pages/validate.js.ddb66582b50a8eaf742a.hot-update.js","sources":["webpack:///./pages/validate.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport { Form, Button, Message, Segment, Icon, Grid } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/src/web3\";\nimport contract from \"../ethereum/src/contract\";\n\nclass Validation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n  }\n\n  //send email and pasword to server\n  handleFormSubmit = () => {\n    this.setState({ loading: true, errorMessage: \"\", successMessage:\"\" });\n    let fname = this.state.fname;\n    let lname = this.state.lname;\n    let idNum = this.state.idNum;\n    let kycKey = this.state.kycKey;\n\n    //get array of hasches from smart contract\n    contract.methods\n      .getHashes()\n      .call()\n      .then(result => {\n        console.log(result);\n        //hash the user data to compare the hash\n        let userHash = web3.utils.soliditySha3(\n          `${fname} ${lname} ${idNum} ${kycKey}`\n        );\n        console.log(userHash);\n        //check if the user hash is in the array from smart contract\n        if (result.includes(userHash) === true) {\n          this.setState({ successMessage: \"Your KycKey is valid!\" });\n        } else {\n          this.setState({ errorMessage: \"Your KycKey is not valid!\" });\n          console.log(this.state.errorMessage);\n        }\n      });\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Segment\n            style={{ maxWidth: \"450px\", margin: \"auto\", marginTop: \"50px\" }}\n          >\n            <br />\n            <Header\n              as=\"h1\"\n              textAlign=\"center\"\n              style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n            >\n              KycKey Validation\n            </Header>\n            <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n              Please provide the information below to validate your KycKey.\n            </Header>\n            <Header as=\"h4\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n              Note: The information must be the same as the as the information\n              provided at your registration process\n            </Header>\n            <Form\n              onSubmit={this.handleFormSubmit}\n              success={this.state.successMessage}\n              error={this.state.errorMessage}\n            >\n              <Form.Field>\n                <Form.Input\n                  required\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"First Name\"\n                  name=\"fname\"\n                  value={this.state.fname}\n                  onChange={event =>\n                    this.setState({ fname: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Form.Field>\n                <Form.Input\n                  required\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Last Name\"\n                  name=\"lname\"\n                  value={this.state.lname}\n                  onChange={event =>\n                    this.setState({ lname: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Form.Field>\n                <Form.Input\n                  required\n                  icon=\"address card\"\n                  iconPosition=\"left\"\n                  placeholder=\"ID Number\"\n                  name=\"idNum\"\n                  value={this.state.idNum}\n                  onChange={event =>\n                    this.setState({ idNum: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Form.Field>\n                <Form.Input\n                  required\n                  icon=\"key\"\n                  iconPosition=\"left\"\n                  placeholder=\"KycKey\"\n                  name=\"kycKey\"\n                  value={this.state.kycKey}\n                  onChange={event =>\n                    this.setState({ kycKey: event.target.value })\n                  }\n                />\n              </Form.Field>\n              {this.state.errorMessage ? (\n                <Message\n                  error\n                  header=\"Oops!\"\n                  content={this.state.errorMessage}\n                />\n              ) : (\n                <Message\n                  success\n                  header=\"Success!\"\n                  content={this.state.successMessage}\n                />\n              )}\n              <Button\n                fluid\n                icon\n                size=\"large\"\n                color=\"blue\"\n                loading={this.state.loading}\n              >\n                Validate\n                <Icon name=\"sign-in\" />\n              </Button>\n            </Form>\n          </Segment>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Validation;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApCA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;;;AA8BA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAcA;AACA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAOA;;;;AAnJA;AACA;AAqJA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}