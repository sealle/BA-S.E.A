{"version":3,"file":"static/webpack/static/development/pages/admin.js.553b0c1d9d128b802904.hot-update.js","sources":["webpack:///./pages/admin.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Header, Container, Message, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport web3 from \"../ethereum/src/web3\";\nimport contract from \"../ethereum/src/contract\";\nimport dynamic from \"next/dynamic\";\nconst AdminConsole = dynamic(import(\"../components/AdminConsole\"), {\n  ssr: false\n});\nconst ProfileHeader = dynamic(import(\"../components/ProfileHeader\"), {\n  ssr: false\n});\n\nclass adminPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      metaMask: true,\n      myAddress: \"\",\n    };\n  }\n\n  async componentWillMount() {\n    //check if admin is logged in to metamask\n    setInterval(async () => {\n      web3.eth.getAccounts((err, accounts) => {\n        if (err != null) console.error(\"An error occurred: \" + err);\n        else if (accounts.length == 0) this.setState({ metaMask: false });\n        else this.setState({ metaMask: true, myAddress: accounts[0] });\n      });\n    }, 1000);\n\n    //listener for smart contract where user requests come in\n    contract.events.KycListen({}, async (err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        //received data is sent to server to verify kycKey\n        let kycKey = result.returnValues.kycKey;\n        let platformAddress = result.returnValues.platformAddress;\n        let toAddress = result.returnValues.sender;\n        let response = await axios.post(window.location.origin + \"/verify\", {\n          kycKey,\n          platformAddress\n        });\n        try {\n          //send answer back to requesting address through smart contract\n          if (response.data.success) {\n            contract.methods.answer(response.data.confirmed).send({\n              from: this.state.myAddress,\n              to: toAddress,\n              gas: \"5000000000\",\n              gasPrice: \"200000\"\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ProfileHeader />\n        {this.state.metaMask == false ? (\n          <Message\n            error\n            content=\"Please login to Metamask\"\n            style={{ marginTop: \"5px\", marginLeft: \"16px\", width: \"98%\" }}\n          />\n        ) : null}\n        <Segment style={{ width: \"98%\", margin: \"16px\" }}>\n          <Header\n            as=\"h1\"\n            textAlign=\"center\"\n            style={{ color: \"#2985d0\", marginTop: \"10px\" }}\n          >\n            Admin Page\n          </Header>\n          {/* render admin console */}\n          <AdminConsole />\n          <Container style={{ width: \"100%\" }}>\n            <Head>\n              <link\n                rel=\"stylesheet\"\n                href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\n              />\n            </Head>\n            <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          </Container>\n        </Segment>\n      </div>\n    );\n  }\n}\n\nexport default adminPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAPA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAQA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AA4BA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAcA;;;;AAtFA;AACA;AAwFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}