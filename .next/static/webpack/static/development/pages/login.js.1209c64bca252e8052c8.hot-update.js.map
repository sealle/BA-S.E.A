{"version":3,"file":"static/webpack/static/development/pages/login.js.1209c64bca252e8052c8.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Router } from \"../routes\";\nimport {\n  Form,\n  Button,\n  Message,\n  Segment,\n  Icon,\n  Checkbox\n} from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport Layout from \"../components/Layout\";\nimport axios from \"axios\";\nimport { setCookie } from \"../utils/CookieUtils\";\nimport HomeHeader from \"../components/HomeHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport Helmet from \"react-helmet\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      username: \"\",\n      errorMessage: \"\",\n      loading: false\n    };\n    this.login = e => this._login();\n  }\n\n  async _login() {\n    const formData = new FormData();\n    formData.append(\"username\", this.state.username);\n    formData.append(\"password\", this.state.password);\n    formData.append(\"errorMessage\", this.state.errorMessage);\n\n    this.setState({ loading: true });\n\n    try {\n      const res = await axios.post(\n        window.location.origin + \"/authenticate\",\n        formData\n      );\n      if (res.data.success) {\n        if (res.data.registerStatus == \"yes\" && res.data.privileg == \"admin\") {\n          setCookie(\"x-access-token\", res.data.adminToken, 1);\n          Router.push(\"/admin\");\n        } else if (\n          res.data.registerStatus == \"yes\" &&\n          res.data.privileg == \"user\"\n        ) {\n          setCookie(\"x-access-token\", res.data.userToken, 1);\n          Router.push(\"/profile\");\n        } else {\n          setCookie(\"x-access-token\", res.data.registerToken, 1);\n          Router.push(\"/terms\");\n        }\n      }\n    } catch (error) {\n      this.setState({\n        errorMessage: error.response.data.message\n      });\n    }\n\n    this.setState({ loading: false });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <HomeHeader /> */}\n        <Layout>\n          {/* <Header as=\"h3\" textAlign=\"center\" style={{ marginBottom: 20 }}>\n            Please login or register\n          </Header> */}\n          <Segment\n            style={{\n              maxWidth: \"450px\",\n              margin: \"auto\",\n              // backgroundColor: \"#2985d0\",\n              marginTop: \"50px\"\n            }}\n          >\n            <div style={{ textAlign: \"center\", marginBottom: \"-50px\" }}>\n              <Icon circular name=\"users\" size=\"huge\" fluid color=\"blue\" />\n            </div>\n            <Header\n              as=\"h1\"\n              textAlign=\"center\"\n              style={{ marginTop: 60, color: \"#2985d0\" }}\n            >\n              Member Login\n            </Header>\n            <br />\n            <Form onSubmit={this.login} error={this.state.errorMessage}>\n              <Form.Field>\n                {/* <label> Username </label> */}\n                <Form.Input\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={event =>\n                    this.setState({ username: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Form.Field>\n                {/* <label>Password</label> */}\n                <Form.Input\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={event =>\n                    this.setState({ password: event.target.value })\n                  }\n                />\n              </Form.Field>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n              <Button\n                fluid\n                icon\n                size=\"large\"\n                color=\"blue\"\n                loading={this.state.loading}\n              >\n                Login\n                <Icon name=\"sign-in\" />\n              </Button>\n              {/* <Form.Field> //TODO: make Grid!\n                <Checkbox\n                  fluid\n                  label=\"Remember me\"\n                  style={{ marginTop: \"10px\" }}\n                >\n                  Remember me\n                </Checkbox>\n                <a href=\"#\" sytle={{ textAlign: \"right\" }}>\n                  Forgot Password\n                </a>\n              </Form.Field> */}\n            </Form>\n          </Segment>\n          <br />\n          <Message\n            style={{\n              maxWidth: \"450px\",\n              margin: \"auto\",\n              textAlign: \"center\",\n              backgroundColor: \"white\"\n            }}\n          >\n            New to us?{\" \"}\n            <a href=\"/register\" style={{ color: \"#2985d0\" }}>\n              Register\n            </a>\n          </Message>\n\n          {/* <Link route=\"/register\">\n              <Button primary fluid>\n                Register\n              </Button>\n            </Link> */}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAAA;AAAA;AACA;AATA;AASA;AACA;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;AAGA;AACA;;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AADA;AACA;;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AANA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAPA;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AAxJA;AACA;AA0JA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}