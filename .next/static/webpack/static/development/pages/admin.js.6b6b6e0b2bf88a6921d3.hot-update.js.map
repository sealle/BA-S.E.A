{"version":3,"file":"static/webpack/static/development/pages/admin.js.6b6b6e0b2bf88a6921d3.hot-update.js","sources":["webpack:///./pages/admin.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ProfileHeader from \"../components/ProfileHeader\";\nimport Layout from \"../components/Layout\";\nimport { Header, Container, Grid, Menu, Message } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport web3 from \"../ethereum/src/web3\";\nimport contract from \"../ethereum/src/contract\";\n\nclass adminPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      metaMask: true,\n      myAddress: \"\"\n    };\n  }\n\n  async componentWillMount() {\n    setInterval(() => {\n      web3.eth.getAccounts((err, accounts) => {\n        if (err != null) console.error(\"An error occurred: \" + err);\n        else if (accounts.length == 0) this.setState({ metaMask: false });\n        else this.setState({ metaMask: true, myAddress: accounts[0] });\n      });\n    }, 3000);\n\n    console.log(contract)\n    // let accounts = await web3.eth.getAccounts();\n    // let myAddress = accounts[0];\n    // let confirmed = true;\n\n    // contract.methods.answer(confirmed).send({\n    //   from: this.state.myAddress,\n    //   to: 0xa9c3f40905a01240f63aa2b27375b5d43dcd64e5\n    // });\n\n    contract.events.KycListen({}, async (err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(result);\n        let kycKey = result.returnValues.kycKey;\n        let toAddress = result.returnValues.platformAddress;\n        console.log(kycKey, toAddress);\n        let response = await axios.post(window.location.origin + \"/verify\", {\n          kycKey,\n          toAddress\n        });\n        try {\n          if (response.data.success) {\n            contract.methods.answer(response.data.confirmed).send({\n              from: this.state.myAddress,\n              to: toAddress\n            });\n          } else {\n            contract.methods.answer(response.data.confirmed).send({\n              from: this.state.myAddress,\n              to: toAddress\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.metaMask == false ? (\n          <Message\n            error\n            content=\"Please login to Metamask\"\n            style={{ marginTop: \"5px\", marginLeft: \"120px\", width: \"900px\" }}\n          />\n        ) : null}\n        <ProfileHeader />\n        <Layout>\n          <Container style={{ width: \"100%\" }}>\n            <Head>\n              <link\n                rel=\"stylesheet\"\n                href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css\"\n              />\n            </Head>\n            <style>{`\n        body {\n          background: #e6e6e6;\n        }\n      `}</style>\n          </Container>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default adminPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAPA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAQA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AA8BA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAcA;;;;AAvFA;AACA;AAyFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}