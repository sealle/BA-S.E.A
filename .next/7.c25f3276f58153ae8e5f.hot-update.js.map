{"version":3,"file":"7.c25f3276f58153ae8e5f.hot-update.js","sources":["webpack:///components/VideoChat.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MediaHandler from \"../webrtc/MediaHandler\";\nimport Pusher from \"pusher-js\";\nimport Peer from \"simple-peer\";\n\nconst APP_KEY = \"0f924dcd44dc93a88aa7\";\nconst wrtc = require(\"wrtc\");\nimport getCurrentUser from \"../utils/UserUtils\";\nimport { getCookie } from \"../utils/CookieUtils\";\nimport jwtDecode from \"jwt-decode\";\n\nexport default class VideoChat extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      hasMedia: false,\n      otherUserName: \"\"\n    };\n\n    const token = getCookie(\"x-access-token\");\n    const decoded = jwtDecode(token);\n\n    let userName = getCurrentUser();\n\n    window.user = {\n      name: userName\n    };\n    window.xsrftoken = decoded.xsrftoken;\n\n    this.user = window.user;\n    this.user.stream = null;\n    this.peers = {};\n\n    this.mediaHandler = new MediaHandler();\n    this.setupPusher();\n\n    this.callTo = this.callTo.bind(this);\n    this.setupPusher = this.setupPusher.bind(this);\n    this.startPeer = this.startPeer.bind(this);\n  }\n\n  componentWillMount() {\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({ hasMedia: true });\n      this.user.stream = stream;\n\n      /*try {\n        this.myVideo.srcObject = stream;\n      } catch (e) {*/\n      this.myVideo.src = URL.createObjectURL(stream);\n      //}\n\n      this.myVideo.play();\n    });\n  }\n\n  setupPusher() {\n    //TODO: Pusher only one way: User->Admin\n    //Pusher.logToConsole = true;\n    this.pusher = new Pusher(APP_KEY, {\n      authEndpoint: \"/pusher/auth\",\n      cluster: \"eu\",\n      auth: {\n        params: this.user.name,\n        headers: {\n          \"X-XSRF-Token\": window.xsrfToken\n        }\n      }\n    });\n\n    this.channel = this.pusher.subscribe(\"presence-video-channel\"); //presence: requires auth!\n\n    this.channel.bind(`client-signal-${this.user.name}`, signal => {\n      let peer = this.peers[signal.userName];\n\n      // if peer is not already exists, we got an incoming call\n      if (peer === undefined) {\n        this.setState({ otherUserName: signal.userName });\n        peer = this.startPeer(signal.userName, false);\n      }\n\n      peer.signal(signal.data);\n    });\n    /*this.channel.bind('pusher:subscription_succeeded', function() {\n            alert('successfully subscribed!');\n        });*/\n  }\n\n  startPeer(userName, initiator = true, wrtc) {\n    //TODO: initiator is always user!\n    const peer = new Peer({\n      initiator,\n      stream: this.user.stream,\n      trickle: false,\n      wrtc: wrtc\n    });\n\n    peer.on(\"signal\", data => {\n      this.channel.trigger(`client-signal-${userName}`, {\n        type: \"signal\",\n        userName: this.user.name,\n        data: data\n      });\n    });\n\n    peer.on(\"stream\", stream => {\n      /*try {\n        this.myVideo.srcObject = stream; //bug -> why is the stream reloading?\n      } catch (e) {\n        this.myVideo.src = URL.createObjectURL(stream);\n        console.log(e);\n      }\n\n      this.myVideo.play();\n    });*/\n      this.userVideo.src = URL.createObjectURL(stream);\n      //this.userVideo.srcObject = stream; //bug -> why is the stream reloading?\n      const playPromise = this.userVideo.play();\n\n      if (playPromise !== null) {\n        playPromise.catch(() => {\n          this.userVideo.play();\n        });\n      }\n    });\n\n    peer.on(\"close\", () => {\n      let peer = this.peers[userName];\n      if (peer !== undefined) {\n        peer.destroy(err);\n      }\n\n      this.peers[userName] = undefined;\n    });\n\n    return peer;\n  }\n\n  callTo(userName) {\n    this.peers[userName] = this.startPeer(userName);\n  }\n\n  render() {\n    return (\n      <div className=\"VideoChat\" style={{ textAlign: \"center\" }}>\n        <h1>VideoChat</h1>\n        {[\"Admin\"].map(userName => {\n          return this.user.name !== userName ? (\n            <button key={userName} onClick={() => this.callTo(userName)}>\n              Call {userName}\n            </button>\n          ) : null;\n        })}\n\n        <div\n          className=\"video-container\"\n          style={{\n            width: \"500px\",\n            height: \"380px\",\n            margin: \"0px auto\",\n            position: \"relative\",\n            border: \"6px solid #645cff\"\n          }}\n        >\n          <video\n            className=\"my-video\"\n            ref={ref => {\n              this.myVideo = ref;\n            }}\n            style={{\n              width: \"130px\",\n              position: \"absolute\",\n              left: \"10px\",\n              bottom: \"10px\",\n              border: \"6px solid #2196F3\",\n              zIndex: \"2\"\n            }}\n          />\n          <video\n            className=\"user-video\"\n            ref={ref => {\n              this.userVideo = ref;\n            }}\n            style={{\n              position: \"absolute\",\n              left: \"0\",\n              right: \"0\",\n              bottom: \"0\",\n              top: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              zIndex: \"1\"\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// components/VideoChat.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AAEA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3BA;AA4BA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;;;;AAGA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AALA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AALA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;AA3LA;AACA;;;;;A","sourceRoot":""}